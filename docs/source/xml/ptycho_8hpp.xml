<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="ptycho_8hpp" kind="file" language="C++">
    <compoundname>ptycho.hpp</compoundname>
    <includes local="no">cstddef</includes>
    <includes local="no">vector</includes>
    <includes local="no">common/complex.hpp</includes>
    <includes local="no">common/types.hpp</includes>
    <includes refid="propagator_8hpp" local="no">propagator.hpp</includes>
    <includedby refid="glim_8cu" local="yes">/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/glim.cu</includedby>
    <includedby refid="main_8cu" local="yes">/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/main.cu</includedby>
    <includedby refid="pie_8cu" local="yes">/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/pie.cu</includedby>
    <includedby refid="poscorrection_8cu" local="yes">/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/poscorrection.cu</includedby>
    <includedby refid="ptycho_8cu" local="yes">/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/ptycho.cu</includedby>
    <includedby refid="raar_8cu" local="yes">/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/raar.cu</includedby>
    <incdepgraph>
      <node id="4">
        <label>common/complex.hpp</label>
      </node>
      <node id="7">
        <label>cufft.h</label>
      </node>
      <node id="6">
        <label>propagator.hpp</label>
        <link refid="propagator_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
      <node id="1">
        <label>/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp</label>
        <link refid="ptycho_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>cstddef</label>
      </node>
      <node id="8">
        <label>types.hpp</label>
      </node>
      <node id="5">
        <label>common/types.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="6">
        <label>/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/ptycho.cu</label>
        <link refid="ptycho_8cu"/>
      </node>
      <node id="2">
        <label>/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/glim.cu</label>
        <link refid="glim_8cu"/>
      </node>
      <node id="3">
        <label>/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/main.cu</label>
        <link refid="main_8cu"/>
      </node>
      <node id="5">
        <label>/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/poscorrection.cu</label>
        <link refid="poscorrection_8cu"/>
      </node>
      <node id="4">
        <label>/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/pie.cu</label>
        <link refid="pie_8cu"/>
      </node>
      <node id="7">
        <label>/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/raar.cu</label>
        <link refid="raar_8cu"/>
      </node>
      <node id="1">
        <label>/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp</label>
        <link refid="ptycho_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structROI" prot="public">ROI</innerclass>
    <innerclass refid="structPOptAlgorithm" prot="public">POptAlgorithm</innerclass>
    <innerclass refid="structRAAR" prot="public">RAAR</innerclass>
    <innerclass refid="structGLim" prot="public">GLim</innerclass>
    <innerclass refid="structPie" prot="public">Pie</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="ptycho_8hpp_1a85d257ca7965c110ed39911452d19fff" prot="public" static="no" strong="yes">
        <type></type>
        <name>NoiseModel</name>
        <enumvalue id="ptycho_8hpp_1a85d257ca7965c110ed39911452d19fffa92e2a876702d06925b281147586486b9" prot="public">
          <name>EUCLID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ptycho_8hpp_1a85d257ca7965c110ed39911452d19fffa37a2f93fd56db2dd5f74780e8bca23b3" prot="public">
          <name>GAUSS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ptycho_8hpp_1a85d257ca7965c110ed39911452d19fffa92a9a9519a6a4f5edd0b2694fe1c9122" prot="public">
          <name>POISSON</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ptycho_8hpp_1a85d257ca7965c110ed39911452d19fffabb4784231ff45108ee20bad16e4a2e8c" prot="public">
          <name>DEAD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ptycho_8hpp_1a85d257ca7965c110ed39911452d19fffa516a2342953891f249b58ff1c3943723" prot="public">
          <name>MIXED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Noise model to use in the LS-Maximum Likelihood optimization. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" line="247" column="22" bodyfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" bodystart="247" bodyend="247"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="ptycho_8hpp_1a2441dd3c983498585f5d3713eb2bdec7" prot="public" static="no">
        <type>MImage&lt; <ref refid="structROI" kindref="compound">ROI</ref> &gt;</type>
        <definition>typedef MImage&lt;ROI&gt; RoiArray</definition>
        <argsstring></argsstring>
        <name>RoiArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" line="23" column="16" bodyfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ptycho_8hpp_1a21d9c6942860f777da21bac01cb5cd1c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__device__ float</type>
        <definition>__device__ float sq</definition>
        <argsstring>(float x)</argsstring>
        <name>sq</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" line="12" column="25" bodyfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" bodystart="12" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="ptycho_8hpp_1a5d0e3f4192830fa314a9b15975d8bb2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IndexRois</definition>
        <argsstring>(ROI *rois, int numrois)</argsstring>
        <name>IndexRois</name>
        <param>
          <type><ref refid="structROI" kindref="compound">ROI</ref> *</type>
          <declname>rois</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numrois</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" line="88" column="6" bodyfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/ptycho.cu" bodystart="183" bodyend="185" declfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" declline="88" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ptycho_8hpp_1a97ec95d785a25d7a7ad2bac4ed1ff5ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t ptycho_num_batches</definition>
        <argsstring>(POptAlgorithm &amp;ptycho)</argsstring>
        <name>ptycho_num_batches</name>
        <param>
          <type><ref refid="structPOptAlgorithm" kindref="compound">POptAlgorithm</ref> &amp;</type>
          <declname>ptycho</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" line="90" column="15" bodyfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" bodystart="90" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="ptycho_8hpp_1ad52670044f5598683c76426564e3e8de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t ptycho_num_gpus</definition>
        <argsstring>(POptAlgorithm &amp;ptycho)</argsstring>
        <name>ptycho_num_gpus</name>
        <param>
          <type><ref refid="structPOptAlgorithm" kindref="compound">POptAlgorithm</ref> &amp;</type>
          <declname>ptycho</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" line="94" column="15" bodyfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" bodystart="94" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="ptycho_8hpp_1a84db02ad465b040943703c8bfa2de0ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ptycho_num_modes</definition>
        <argsstring>(POptAlgorithm &amp;ptycho)</argsstring>
        <name>ptycho_num_modes</name>
        <param>
          <type><ref refid="structPOptAlgorithm" kindref="compound">POptAlgorithm</ref> &amp;</type>
          <declname>ptycho</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" line="98" column="12" bodyfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" bodystart="98" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="ptycho_8hpp_1a7c407959761feaf187a9876422f155a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t ptycho_cur_batch_zsize</definition>
        <argsstring>(POptAlgorithm &amp;ptycho, size_t batch_idx)</argsstring>
        <name>ptycho_cur_batch_zsize</name>
        <param>
          <type><ref refid="structPOptAlgorithm" kindref="compound">POptAlgorithm</ref> &amp;</type>
          <declname>ptycho</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>batch_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of slices for current batch. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" line="105" column="15" bodyfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" bodystart="105" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="ptycho_8hpp_1a29e6ab2719a0f15f98956fbf7e113115" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t ptycho_batch_size</definition>
        <argsstring>(POptAlgorithm &amp;ptycho)</argsstring>
        <name>ptycho_batch_size</name>
        <param>
          <type><ref refid="structPOptAlgorithm" kindref="compound">POptAlgorithm</ref> &amp;</type>
          <declname>ptycho</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" line="109" column="15" bodyfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" bodystart="109" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="ptycho_8hpp_1a1911ebcdd9be52014b087a48f65625fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t ptycho_cur_batch_gpu_zsize</definition>
        <argsstring>(POptAlgorithm &amp;ptycho, size_t batch_idx, size_t gpu_idx)</argsstring>
        <name>ptycho_cur_batch_gpu_zsize</name>
        <param>
          <type><ref refid="structPOptAlgorithm" kindref="compound">POptAlgorithm</ref> &amp;</type>
          <declname>ptycho</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>batch_idx</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>gpu_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of slices on gpu for batch. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" line="116" column="15" bodyfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" bodystart="116" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="ptycho_8hpp_1a6dbc166eb113b0bb3d8fd4db5a21fab4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ProjectProbe</definition>
        <argsstring>(POptAlgorithm &amp;ptycho, int section)</argsstring>
        <name>ProjectProbe</name>
        <param>
          <type><ref refid="structPOptAlgorithm" kindref="compound">POptAlgorithm</ref> &amp;</type>
          <declname>ptycho</declname>
        </param>
        <param>
          <type>int</type>
          <declname>section</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Probe real space project from a given section of the list. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" line="123" column="6" declfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" declline="123" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ptycho_8hpp_1a8f83c3b33c93ae2f6a80911674f7c9a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void project_reciprocal_space</definition>
        <argsstring>(POptAlgorithm &amp;ptycho, rImage *difpads, int g, bool isGradPm)</argsstring>
        <name>project_reciprocal_space</name>
        <param>
          <type><ref refid="structPOptAlgorithm" kindref="compound">POptAlgorithm</ref> &amp;</type>
          <declname>ptycho</declname>
        </param>
        <param>
          <type>rImage *</type>
          <declname>difpads</declname>
        </param>
        <param>
          <type>int</type>
          <declname>g</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isGradPm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Fourier project exitwaves from a given section of the list. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" line="130" column="6" bodyfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/ptycho.cu" bodystart="188" bodyend="211" declfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" declline="130" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ptycho_8hpp_1ab256bbc9d29fadf078222578dc77c0a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DestroyPOptAlgorithm</definition>
        <argsstring>(POptAlgorithm *&amp;ptycho)</argsstring>
        <name>DestroyPOptAlgorithm</name>
        <param>
          <type><ref refid="structPOptAlgorithm" kindref="compound">POptAlgorithm</ref> *&amp;</type>
          <declname>ptycho</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" line="132" column="6" bodyfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/ptycho.cu" bodystart="240" bodyend="300" declfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" declline="132" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ptycho_8hpp_1a5e498e311a9f047b1fa83e808a5e7577" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structPOptAlgorithm" kindref="compound">POptAlgorithm</ref> *</type>
        <definition>POptAlgorithm* CreatePOptAlgorithm</definition>
        <argsstring>(float *difpads, const dim3 &amp;difshape, complex *probe, const dim3 &amp;probeshape, complex *object, const dim3 &amp;objshape, ROI *rois, int numrois, int batchsize, float *rfact, const std::vector&lt; int &gt; &amp;gpus, float *objsupp, float *probesupp, int numobjsupp, float *sigmask, int geometricsteps, float *background, float probef1, float step_obj, float step_probe, float reg_obj, float reg_probe)</argsstring>
        <name>CreatePOptAlgorithm</name>
        <param>
          <type>float *</type>
          <declname>difpads</declname>
        </param>
        <param>
          <type>const dim3 &amp;</type>
          <declname>difshape</declname>
        </param>
        <param>
          <type>complex *</type>
          <declname>probe</declname>
        </param>
        <param>
          <type>const dim3 &amp;</type>
          <declname>probeshape</declname>
        </param>
        <param>
          <type>complex *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>const dim3 &amp;</type>
          <declname>objshape</declname>
        </param>
        <param>
          <type><ref refid="structROI" kindref="compound">ROI</ref> *</type>
          <declname>rois</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numrois</declname>
        </param>
        <param>
          <type>int</type>
          <declname>batchsize</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>rfact</declname>
        </param>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>gpus</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>objsupp</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>probesupp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numobjsupp</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>sigmask</declname>
        </param>
        <param>
          <type>int</type>
          <declname>geometricsteps</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>background</declname>
        </param>
        <param>
          <type>float</type>
          <declname>probef1</declname>
        </param>
        <param>
          <type>float</type>
          <declname>step_obj</declname>
        </param>
        <param>
          <type>float</type>
          <declname>step_probe</declname>
        </param>
        <param>
          <type>float</type>
          <declname>reg_obj</declname>
        </param>
        <param>
          <type>float</type>
          <declname>reg_probe</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" line="134" column="15" bodyfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/ptycho.cu" bodystart="302" bodyend="421" declfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" declline="134" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="ptycho_8hpp_1a58f3c3cd01384b311517f1be519e4d81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename dtype</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ProjectPhiToProbe</definition>
        <argsstring>(POptAlgorithm &amp;ptycho, int section, const MImage&lt; dtype &gt; &amp;Phi, bool bNormalizeFFT, bool isGradPm)</argsstring>
        <name>ProjectPhiToProbe</name>
        <param>
          <type><ref refid="structPOptAlgorithm" kindref="compound">POptAlgorithm</ref> &amp;</type>
          <declname>ptycho</declname>
        </param>
        <param>
          <type>int</type>
          <declname>section</declname>
        </param>
        <param>
          <type>const MImage&lt; dtype &gt; &amp;</type>
          <declname>Phi</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bNormalizeFFT</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isGradPm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" line="143" column="6" bodyfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/ptycho.cu" bodystart="78" bodyend="88" declfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" declline="143" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ptycho_8hpp_1a1e79a213447a667128a958e4383d2f7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ApplyProbeUpdate</definition>
        <argsstring>(POptAlgorithm &amp;ptycho, cImage &amp;velocity, float stepsize, float momentum, float epsilon)</argsstring>
        <name>ApplyProbeUpdate</name>
        <param>
          <type><ref refid="structPOptAlgorithm" kindref="compound">POptAlgorithm</ref> &amp;</type>
          <declname>ptycho</declname>
        </param>
        <param>
          <type>cImage &amp;</type>
          <declname>velocity</declname>
        </param>
        <param>
          <type>float</type>
          <declname>stepsize</declname>
        </param>
        <param>
          <type>float</type>
          <declname>momentum</declname>
        </param>
        <param>
          <type>float</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" line="144" column="6" bodyfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/ptycho.cu" bodystart="214" bodyend="238" declfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" declline="144" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ptycho_8hpp_1ae6665768898313d181d9c50cd38a6684" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ApplySupport</definition>
        <argsstring>(cImage &amp;img, rImage &amp;support, std::vector&lt; float &gt; &amp;SupportSizes)</argsstring>
        <name>ApplySupport</name>
        <param>
          <type>cImage &amp;</type>
          <declname>img</declname>
        </param>
        <param>
          <type>rImage &amp;</type>
          <declname>support</declname>
        </param>
        <param>
          <type>std::vector&lt; float &gt; &amp;</type>
          <declname>SupportSizes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" line="145" column="6" bodyfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/glim.cu" bodystart="66" bodyend="71" declfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" declline="145" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ptycho_8hpp_1ae1b9df742b633f0babaef337af8b7ae9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structRAAR" kindref="compound">RAAR</ref> *</type>
        <definition>RAAR* CreateRAAR</definition>
        <argsstring>(float *difpads, const dim3 &amp;difshape, complex *probe, const dim3 &amp;probeshape, complex *object, const dim3 &amp;objshape, ROI *rois, int numrois, int batchsize, float *rfact, const std::vector&lt; int &gt; &amp;gpus, float *objsupp, float *probesupp, int numobjsupp, float *sigmask, int geometricsteps, float *background, float probef1, float step_obj, float step_probe, float reg_obj, float reg_probe)</argsstring>
        <name>CreateRAAR</name>
        <param>
          <type>float *</type>
          <declname>difpads</declname>
        </param>
        <param>
          <type>const dim3 &amp;</type>
          <declname>difshape</declname>
        </param>
        <param>
          <type>complex *</type>
          <declname>probe</declname>
        </param>
        <param>
          <type>const dim3 &amp;</type>
          <declname>probeshape</declname>
        </param>
        <param>
          <type>complex *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>const dim3 &amp;</type>
          <declname>objshape</declname>
        </param>
        <param>
          <type><ref refid="structROI" kindref="compound">ROI</ref> *</type>
          <declname>rois</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numrois</declname>
        </param>
        <param>
          <type>int</type>
          <declname>batchsize</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>rfact</declname>
        </param>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>gpus</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>objsupp</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>probesupp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numobjsupp</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>sigmask</declname>
        </param>
        <param>
          <type>int</type>
          <declname>geometricsteps</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>background</declname>
        </param>
        <param>
          <type>float</type>
          <declname>probef1</declname>
        </param>
        <param>
          <type>float</type>
          <declname>step_obj</declname>
        </param>
        <param>
          <type>float</type>
          <declname>step_probe</declname>
        </param>
        <param>
          <type>float</type>
          <declname>reg_obj</declname>
        </param>
        <param>
          <type>float</type>
          <declname>reg_probe</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor: Allocates phistack. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" line="164" column="6" bodyfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/raar.cu" bodystart="106" bodyend="134" declfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" declline="164" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ptycho_8hpp_1a63413b7b0c2a5b36b5595ff9a23ce9af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DestroyRAAR</definition>
        <argsstring>(RAAR *&amp;raar)</argsstring>
        <name>DestroyRAAR</name>
        <param>
          <type><ref refid="structRAAR" kindref="compound">RAAR</ref> *&amp;</type>
          <declname>raar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" line="171" column="6" bodyfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/raar.cu" bodystart="136" bodyend="142" declfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" declline="171" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ptycho_8hpp_1a753690d19a69c7db210d14439c0d56cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RAARRun</definition>
        <argsstring>(RAAR &amp;raar, int iter)</argsstring>
        <name>RAARRun</name>
        <param>
          <type><ref refid="structRAAR" kindref="compound">RAAR</ref> &amp;</type>
          <declname>raar</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iter</declname>
          <defname>iterations</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="structRAAR" kindref="compound">RAAR</ref> iteration loop. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" line="173" column="6" bodyfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/raar.cu" bodystart="204" bodyend="316" declfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" declline="173" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ptycho_8hpp_1a4f6cf0259cde9fbaad6212c802c64874" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RAARProjectProbe</definition>
        <argsstring>(RAAR &amp;raar, int section)</argsstring>
        <name>RAARProjectProbe</name>
        <param>
          <type><ref refid="structRAAR" kindref="compound">RAAR</ref> &amp;</type>
          <declname>raar</declname>
        </param>
        <param>
          <type>int</type>
          <declname>section</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" line="175" column="6" declfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" declline="175" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ptycho_8hpp_1a3ef2e472fc5918a16aaffc614254bd71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RAARApplyObjectUpdate</definition>
        <argsstring>(RAAR &amp;raar, cImage &amp;velocity, float stepsize, float momentum, float epsilon)</argsstring>
        <name>RAARApplyObjectUpdate</name>
        <param>
          <type><ref refid="structRAAR" kindref="compound">RAAR</ref> &amp;</type>
          <declname>raar</declname>
        </param>
        <param>
          <type>cImage &amp;</type>
          <declname>velocity</declname>
        </param>
        <param>
          <type>float</type>
          <declname>stepsize</declname>
        </param>
        <param>
          <type>float</type>
          <declname>momentum</declname>
        </param>
        <param>
          <type>float</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Projects phistack to object subspace and updates the object estimate.</para>
<para>Applies KRAAR_ObjPs and updates the object estimate. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" line="180" column="6" bodyfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/raar.cu" bodystart="152" bodyend="175" declfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" declline="180" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ptycho_8hpp_1a6f84a4b01057c3125c53c508e08bdd6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RAARApplyProbeUpdate</definition>
        <argsstring>(RAAR &amp;raar, cImage &amp;velocity, float stepsize, float momentum, float epsilon)</argsstring>
        <name>RAARApplyProbeUpdate</name>
        <param>
          <type><ref refid="structRAAR" kindref="compound">RAAR</ref> &amp;</type>
          <declname>raar</declname>
        </param>
        <param>
          <type>cImage &amp;</type>
          <declname>velocity</declname>
        </param>
        <param>
          <type>float</type>
          <declname>stepsize</declname>
        </param>
        <param>
          <type>float</type>
          <declname>momentum</declname>
        </param>
        <param>
          <type>float</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Projects phistack to the probe subspace and calls Super::ApplyProbeUpdate </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" line="184" column="6" bodyfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/raar.cu" bodystart="180" bodyend="191" declfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" declline="184" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ptycho_8hpp_1a8d4daceb323256469196633426c8e859" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__global__ void</type>
        <definition>__global__ void KGLExitwave</definition>
        <argsstring>(GArray&lt; complex &gt; exitwave, const GArray&lt; complex &gt; probe, const GArray&lt; complex &gt; object, const GArray&lt; ROI &gt; rois)</argsstring>
        <name>KGLExitwave</name>
        <param>
          <type>GArray&lt; complex &gt;</type>
          <declname>exitwave</declname>
        </param>
        <param>
          <type>const GArray&lt; complex &gt;</type>
          <declname>probe</declname>
        </param>
        <param>
          <type>const GArray&lt; complex &gt;</type>
          <declname>object</declname>
        </param>
        <param>
          <type>const GArray&lt; <ref refid="structROI" kindref="compound">ROI</ref> &gt;</type>
          <declname>rois</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" line="187" column="17" bodyfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/glim.cu" bodystart="6" bodyend="25" declfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" declline="187" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="ptycho_8hpp_1a69032373905c1f0f252d632abda96fe3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__global__ void</type>
        <definition>__global__ void KGLPs</definition>
        <argsstring>(const GArray&lt; complex &gt; probe, GArray&lt; complex &gt; object_acc, GArray&lt; float &gt; object_div, const GArray&lt; complex &gt; p_pm, const GArray&lt; ROI &gt; rois)</argsstring>
        <name>KGLPs</name>
        <param>
          <type>const GArray&lt; complex &gt;</type>
          <declname>probe</declname>
        </param>
        <param>
          <type>GArray&lt; complex &gt;</type>
          <declname>object_acc</declname>
        </param>
        <param>
          <type>GArray&lt; float &gt;</type>
          <declname>object_div</declname>
        </param>
        <param>
          <type>const GArray&lt; complex &gt;</type>
          <declname>p_pm</declname>
        </param>
        <param>
          <type>const GArray&lt; <ref refid="structROI" kindref="compound">ROI</ref> &gt;</type>
          <declname>rois</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" line="190" column="17" bodyfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/glim.cu" bodystart="27" bodyend="53" declfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" declline="190" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="ptycho_8hpp_1acc7afe1428c039847929f5f49777b1b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__global__ void</type>
        <definition>__global__ void k_project_reciprocal_space</definition>
        <argsstring>(GArray&lt; complex &gt; exitwave, const GArray&lt; float &gt; difpads, float *rfactors, size_t upsample, size_t nummodes, const GArray&lt; float &gt; sigmask, int geometricsteps, bool bIsGrad, const float *background, float *bkgaccum)</argsstring>
        <name>k_project_reciprocal_space</name>
        <param>
          <type>GArray&lt; complex &gt;</type>
          <declname>exitwave</declname>
        </param>
        <param>
          <type>const GArray&lt; float &gt;</type>
          <declname>difpads</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>rfactors</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>upsample</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nummodes</declname>
        </param>
        <param>
          <type>const GArray&lt; float &gt;</type>
          <declname>sigmask</declname>
        </param>
        <param>
          <type>int</type>
          <declname>geometricsteps</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bIsGrad</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>background</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>bkgaccum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" line="193" column="17" bodyfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/ptycho.cu" bodystart="99" bodyend="179" declfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" declline="193" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="ptycho_8hpp_1adf1e12ecffa95a1063f52c4d501f67a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLimRun</definition>
        <argsstring>(GLim &amp;glim, int iter)</argsstring>
        <name>GLimRun</name>
        <param>
          <type><ref refid="structGLim" kindref="compound">GLim</ref> &amp;</type>
          <declname>glim</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" line="206" column="6" bodyfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/glim.cu" bodystart="73" bodyend="180" declfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" declline="206" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ptycho_8hpp_1a0612533b823e68af91aedcf9d7c79dac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structGLim" kindref="compound">GLim</ref> *</type>
        <definition>GLim* CreateGLim</definition>
        <argsstring>(float *difpads, const dim3 &amp;difshape, complex *probe, const dim3 &amp;probeshape, complex *object, const dim3 &amp;objshape, ROI *rois, int numrois, int batchsize, float *rfact, const std::vector&lt; int &gt; &amp;gpus, float *objsupp, float *probesupp, int numobjsupp, float *sigmask, int geometricsteps, float *background, float probef1, float step_obj, float step_probe, float reg_obj, float reg_probe)</argsstring>
        <name>CreateGLim</name>
        <param>
          <type>float *</type>
          <declname>difpads</declname>
        </param>
        <param>
          <type>const dim3 &amp;</type>
          <declname>difshape</declname>
        </param>
        <param>
          <type>complex *</type>
          <declname>probe</declname>
        </param>
        <param>
          <type>const dim3 &amp;</type>
          <declname>probeshape</declname>
        </param>
        <param>
          <type>complex *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>const dim3 &amp;</type>
          <declname>objshape</declname>
        </param>
        <param>
          <type><ref refid="structROI" kindref="compound">ROI</ref> *</type>
          <declname>rois</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numrois</declname>
        </param>
        <param>
          <type>int</type>
          <declname>batchsize</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>rfact</declname>
        </param>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>gpus</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>objsupp</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>probesupp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numobjsupp</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>sigmask</declname>
        </param>
        <param>
          <type>int</type>
          <declname>geometricsteps</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>background</declname>
        </param>
        <param>
          <type>float</type>
          <declname>probef1</declname>
        </param>
        <param>
          <type>float</type>
          <declname>step_obj</declname>
        </param>
        <param>
          <type>float</type>
          <declname>step_probe</declname>
        </param>
        <param>
          <type>float</type>
          <declname>reg_obj</declname>
        </param>
        <param>
          <type>float</type>
          <declname>reg_probe</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" line="208" column="6" bodyfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/glim.cu" bodystart="187" bodyend="201" declfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" declline="208" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ptycho_8hpp_1a0fd2fbf2ef23a7d9c8bdd81e5c7e1f75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DestroyGLim</definition>
        <argsstring>(GLim *&amp;glim)</argsstring>
        <name>DestroyGLim</name>
        <param>
          <type><ref refid="structGLim" kindref="compound">GLim</ref> *&amp;</type>
          <declname>glim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" line="215" column="6" bodyfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/glim.cu" bodystart="203" bodyend="206" declfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" declline="215" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ptycho_8hpp_1aef6b619830608e386b0bfb0655011be0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GLimProjectProbe</definition>
        <argsstring>(GLim &amp;glim, int section)</argsstring>
        <name>GLimProjectProbe</name>
        <param>
          <type><ref refid="structGLim" kindref="compound">GLim</ref> &amp;</type>
          <declname>glim</declname>
        </param>
        <param>
          <type>int</type>
          <declname>section</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" line="217" column="6" bodyfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/glim.cu" bodystart="183" bodyend="185" declfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" declline="217" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ptycho_8hpp_1ad3eaf7b0e0d7a760572bb4a385d128d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structPie" kindref="compound">Pie</ref> *</type>
        <definition>Pie* CreatePie</definition>
        <argsstring>(float *difpads, const dim3 &amp;difshape, complex *probe, const dim3 &amp;probeshape, complex *object, const dim3 &amp;objshape, ROI *rois, int numrois, int batchsize, float *rfact, const std::vector&lt; int &gt; &amp;gpus, float *objsupp, float *probesupp, int numobjsupp, float *sigmask, int geometricsteps, float *background, float probef1, float step_object, float step_probe, float reg_obj, float reg_probe)</argsstring>
        <name>CreatePie</name>
        <param>
          <type>float *</type>
          <declname>difpads</declname>
        </param>
        <param>
          <type>const dim3 &amp;</type>
          <declname>difshape</declname>
        </param>
        <param>
          <type>complex *</type>
          <declname>probe</declname>
        </param>
        <param>
          <type>const dim3 &amp;</type>
          <declname>probeshape</declname>
        </param>
        <param>
          <type>complex *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>const dim3 &amp;</type>
          <declname>objshape</declname>
        </param>
        <param>
          <type><ref refid="structROI" kindref="compound">ROI</ref> *</type>
          <declname>rois</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numrois</declname>
        </param>
        <param>
          <type>int</type>
          <declname>batchsize</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>rfact</declname>
        </param>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>gpus</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>objsupp</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>probesupp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numobjsupp</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>sigmask</declname>
        </param>
        <param>
          <type>int</type>
          <declname>geometricsteps</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>background</declname>
        </param>
        <param>
          <type>float</type>
          <declname>probef1</declname>
        </param>
        <param>
          <type>float</type>
          <declname>step_object</declname>
        </param>
        <param>
          <type>float</type>
          <declname>step_probe</declname>
        </param>
        <param>
          <type>float</type>
          <declname>reg_obj</declname>
        </param>
        <param>
          <type>float</type>
          <declname>reg_probe</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" line="224" column="5" bodyfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/pie.cu" bodystart="12" bodyend="37" declfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" declline="224" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="ptycho_8hpp_1a0c41d92a50ebf6984862d474545e5a34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DestroyPie</definition>
        <argsstring>(Pie *&amp;pie)</argsstring>
        <name>DestroyPie</name>
        <param>
          <type><ref refid="structPie" kindref="compound">Pie</ref> *&amp;</type>
          <declname>pie</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" line="239" column="6" bodyfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/pie.cu" bodystart="39" bodyend="42" declfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" declline="239" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ptycho_8hpp_1ad47895342ed5f0c3d83376afa2e576ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PieRun</definition>
        <argsstring>(Pie &amp;pie, int iterations)</argsstring>
        <name>PieRun</name>
        <param>
          <type><ref refid="structPie" kindref="compound">Pie</ref> &amp;</type>
          <declname>pie</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iterations</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" line="241" column="6" bodyfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/pie.cu" bodystart="138" bodyend="239" declfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp" declline="241" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;cstddef&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;common/complex.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;common/types.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="propagator_8hpp" kindref="compound">propagator.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="ptycho_8hpp_1a21d9c6942860f777da21bac01cb5cd1c" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__device__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="ptycho_8hpp_1a21d9c6942860f777da21bac01cb5cd1c" kindref="member">sq</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x<sp/>*<sp/>x;<sp/>}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="structROI" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structROI" kindref="compound">ROI</ref><sp/>{</highlight></codeline>
<codeline lineno="18" refid="structROI_1aa1c5dc105fd5f5017fe5b4e1eb471f6a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structROI_1aeeb35d1907fcdd6019624d91a943ea8b" kindref="member">x</ref>,<sp/><ref refid="structROI_1aa1c5dc105fd5f5017fe5b4e1eb471f6a" kindref="member">y</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="19" refid="structROI_1af576a847556336ea0d85af23a661a55c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structROI_1af576a847556336ea0d85af23a661a55c" kindref="member">exptime</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="20" refid="structROI_1a69a2289009ab76d9cc92f2b0e1c6393b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structROI_1a69a2289009ab76d9cc92f2b0e1c6393b" kindref="member">I0</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal">};</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="ptycho_8hpp_1a2441dd3c983498585f5d3713eb2bdec7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>MImage&lt;ROI&gt;<sp/><ref refid="ptycho_8hpp_1a2441dd3c983498585f5d3713eb2bdec7" kindref="member">RoiArray</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="structPOptAlgorithm" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structPOptAlgorithm" kindref="compound">POptAlgorithm</ref><sp/>{</highlight></codeline>
<codeline lineno="29" refid="structPOptAlgorithm_1abec0db9e1f00d5267327d02da5161d19" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/><ref refid="structPOptAlgorithm_1abec0db9e1f00d5267327d02da5161d19" kindref="member">gpus</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="structPOptAlgorithm_1a96bb15bd81f718c72d585c8ed611eab9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;RoiArray*&gt;<sp/><ref refid="structPOptAlgorithm_1a96bb15bd81f718c72d585c8ed611eab9" kindref="member">rois</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="32" refid="structPOptAlgorithm_1a506d977d84492238546e64d7b2f38f01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>cMImage*<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="33" refid="structPOptAlgorithm_1aa0bb2bf38b8e6e0126ff0e21fb7203d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>cMImage*<sp/><ref refid="structPOptAlgorithm_1aa0bb2bf38b8e6e0126ff0e21fb7203d6" kindref="member">probe</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="34" refid="structPOptAlgorithm_1a9ebbe9246bb2540b461b66067396ac0e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>cMImage*<sp/><ref refid="structPOptAlgorithm_1a9ebbe9246bb2540b461b66067396ac0e" kindref="member">exitwave</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="35" refid="structPOptAlgorithm_1a7927b2f881d02a9170c59b1e387050ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>rMImage*<sp/><ref refid="structPOptAlgorithm_1a7927b2f881d02a9170c59b1e387050ed" kindref="member">rfactors</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="structPOptAlgorithm_1aab95c3d5ca720cbb59c2a9dbfa508013" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>rMImage*<sp/><ref refid="structPOptAlgorithm_1aab95c3d5ca720cbb59c2a9dbfa508013" kindref="member">objectsupport</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="38" refid="structPOptAlgorithm_1a7c1b1cc6f0a305a74b9bba62fc2bdb62" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>rMImage*<sp/><ref refid="structPOptAlgorithm_1a7c1b1cc6f0a305a74b9bba62fc2bdb62" kindref="member">probesupport</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="39" refid="structPOptAlgorithm_1aacca83621286aadbdc45a53527862069" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;float&gt;<sp/><ref refid="structPOptAlgorithm_1aacca83621286aadbdc45a53527862069" kindref="member">SupportSizes</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="structPOptAlgorithm_1a968ce12fa5071c8ac0480f3a2f30e4d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>rMImage*<sp/><ref refid="structPOptAlgorithm_1a968ce12fa5071c8ac0480f3a2f30e4d8" kindref="member">sigmask</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="42" refid="structPOptAlgorithm_1a5e893d0230778059ce7fc29a3f549094" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structPOptAlgorithm_1a5e893d0230778059ce7fc29a3f549094" kindref="member">bCenterProbe</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="structPOptAlgorithm_1af5208a1e588a5db1bfd7866b49c29189" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structPOptAlgorithm_1af5208a1e588a5db1bfd7866b49c29189" kindref="member">I0</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="structPOptAlgorithm_1ad2cd46aefc388e690475a466352dd00f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classPropagator" kindref="compound">Propagator</ref>*<sp/><ref refid="structPOptAlgorithm_1ad2cd46aefc388e690475a466352dd00f" kindref="member">propagator</ref>[16];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47" refid="structPOptAlgorithm_1acad5f2c1d1066b5397b71034372a9421" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classPropagator" kindref="compound">Propagator</ref>*<sp/><ref refid="structPOptAlgorithm_1acad5f2c1d1066b5397b71034372a9421" kindref="member">probepropagator</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="structPOptAlgorithm_1a92c4b4ea6b38caeb8e254aa30d48317b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>dim3<sp/><ref refid="structPOptAlgorithm_1a92c4b4ea6b38caeb8e254aa30d48317b" kindref="member">difpadshape</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50" refid="structPOptAlgorithm_1af999996bdd95576dfe05569db6be3b53" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structPOptAlgorithm_1af999996bdd95576dfe05569db6be3b53" kindref="member">probef1</ref><sp/>=<sp/>1;<sp/><sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="structPOptAlgorithm_1a8ec4655eee89ffd8bf45f8779d6ba098" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="structPOptAlgorithm_1a8ec4655eee89ffd8bf45f8779d6ba098" kindref="member">cpudifpads</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="53" refid="structPOptAlgorithm_1a6e67c74cbab8c6ab4ff705aadb4f745d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>complex*<sp/><ref refid="structPOptAlgorithm_1a6e67c74cbab8c6ab4ff705aadb4f745d" kindref="member">cpuobject</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="54" refid="structPOptAlgorithm_1ad14397ce6f4c85f02a060a4ddd1d5992" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>complex*<sp/><ref refid="structPOptAlgorithm_1ad14397ce6f4c85f02a060a4ddd1d5992" kindref="member">cpuprobe</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55" refid="structPOptAlgorithm_1a756b6b85c939871d321128435a279dfb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structROI" kindref="compound">ROI</ref>*<sp/><ref refid="structPOptAlgorithm_1a756b6b85c939871d321128435a279dfb" kindref="member">cpurois</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56" refid="structPOptAlgorithm_1abfd36af46d12deaded7d6ebb8e122242" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="structPOptAlgorithm_1abfd36af46d12deaded7d6ebb8e122242" kindref="member">cpurfact</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="structPOptAlgorithm_1aaba1f69047dd13bbbca184679c973c1d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/><ref refid="structPOptAlgorithm_1aaba1f69047dd13bbbca184679c973c1d" kindref="member">roibatch_offset</ref>;</highlight></codeline>
<codeline lineno="59" refid="structPOptAlgorithm_1a536fe6af4356d89078241dbf8dbb6b64" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structPOptAlgorithm_1a536fe6af4356d89078241dbf8dbb6b64" kindref="member">singlebatchsize</ref>;</highlight></codeline>
<codeline lineno="60" refid="structPOptAlgorithm_1a3b7ba09622974d03379e1028946e6111" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structPOptAlgorithm_1a3b7ba09622974d03379e1028946e6111" kindref="member">multibatchsize</ref>;</highlight></codeline>
<codeline lineno="61" refid="structPOptAlgorithm_1a2278546d425d8708f7d5282439d541f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structPOptAlgorithm_1a2278546d425d8708f7d5282439d541f2" kindref="member">geometricsteps</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="structPOptAlgorithm_1ac24fac966485161d3bef7599ee42d679" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structPOptAlgorithm_1ac24fac966485161d3bef7599ee42d679" kindref="member">total_num_rois</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="structPOptAlgorithm_1ade9e24797a0b051d27502f3148230018" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>rMImage*<sp/><ref refid="structPOptAlgorithm_1ade9e24797a0b051d27502f3148230018" kindref="member">object_div</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="66" refid="structPOptAlgorithm_1a4d304204018e1fe000740b0468d74566" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>cMImage*<sp/><ref refid="structPOptAlgorithm_1a4d304204018e1fe000740b0468d74566" kindref="member">object_acc</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="structPOptAlgorithm_1a110d4fbd5c20c09a2044f8c7f5dd1876" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>rMImage*<sp/><ref refid="structPOptAlgorithm_1a110d4fbd5c20c09a2044f8c7f5dd1876" kindref="member">probe_div</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="69" refid="structPOptAlgorithm_1ae4a5ff5d2466dc0a8b59c4d65be2cc6b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>cMImage*<sp/><ref refid="structPOptAlgorithm_1ae4a5ff5d2466dc0a8b59c4d65be2cc6b" kindref="member">probe_acc</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="structPOptAlgorithm_1a8dfd13763eaa2664e0f711bdf78435c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structPOptAlgorithm_1a8dfd13763eaa2664e0f711bdf78435c2" kindref="member">objmomentum</ref><sp/>=<sp/>0.95f;</highlight></codeline>
<codeline lineno="73" refid="structPOptAlgorithm_1a36890b4c11b6e9ea9d0013acfa8015de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structPOptAlgorithm_1a36890b4c11b6e9ea9d0013acfa8015de" kindref="member">probemomentum</ref><sp/>=<sp/>0.9f;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="structPOptAlgorithm_1a28af23f00cd500b58e7145aeb57a16e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structPOptAlgorithm_1a28af23f00cd500b58e7145aeb57a16e2" kindref="member">objstep</ref><sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="76" refid="structPOptAlgorithm_1ab26d95672cf1bdb420e2edb86df59565" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structPOptAlgorithm_1ab26d95672cf1bdb420e2edb86df59565" kindref="member">probestep</ref><sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="structPOptAlgorithm_1a84777c02e5be6e5a84906bf7ba0da62a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structPOptAlgorithm_1a84777c02e5be6e5a84906bf7ba0da62a" kindref="member">probereg</ref><sp/>=<sp/>0.01f;</highlight></codeline>
<codeline lineno="79" refid="structPOptAlgorithm_1a0432e54095f9ef861d69ef7db2020bcc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structPOptAlgorithm_1a0432e54095f9ef861d69ef7db2020bcc" kindref="member">objreg</ref><sp/>=<sp/>0.01f;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="structPOptAlgorithm_1a89393de4a5e66a2339b813512828c6a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>rMImage*<sp/><ref refid="structPOptAlgorithm_1a89393de4a5e66a2339b813512828c6a0" kindref="member">background</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82" refid="structPOptAlgorithm_1ad42ddbe8feb45a84c8b9dff9a834019b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>rMImage*<sp/><ref refid="structPOptAlgorithm_1ad42ddbe8feb45a84c8b9dff9a834019b" kindref="member">bkgaccum</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83" refid="structPOptAlgorithm_1ab543ac443007610201ae30c23e6ad7a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>rImage*<sp/><ref refid="structPOptAlgorithm_1ab543ac443007610201ae30c23e6ad7a5" kindref="member">bkgmomentum</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="structPOptAlgorithm_1a0768eceb552480788fa78044e3cd401c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="structPOptAlgorithm_1a0768eceb552480788fa78044e3cd401c" kindref="member">cpubackground</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">};</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ptycho_8hpp_1a5d0e3f4192830fa314a9b15975d8bb2f" kindref="member">IndexRois</ref>(<ref refid="structROI" kindref="compound">ROI</ref>*<sp/>rois,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numrois);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="ptycho_8hpp_1a97ec95d785a25d7a7ad2bac4ed1ff5ba" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="ptycho_8hpp_1a97ec95d785a25d7a7ad2bac4ed1ff5ba" kindref="member">ptycho_num_batches</ref>(<ref refid="structPOptAlgorithm" kindref="compound">POptAlgorithm</ref>&amp;<sp/>ptycho)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptycho.<ref refid="structPOptAlgorithm_1a96bb15bd81f718c72d585c8ed611eab9" kindref="member">rois</ref>.size();</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="ptycho_8hpp_1ad52670044f5598683c76426564e3e8de" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="ptycho_8hpp_1ad52670044f5598683c76426564e3e8de" kindref="member">ptycho_num_gpus</ref>(<ref refid="structPOptAlgorithm" kindref="compound">POptAlgorithm</ref>&amp;<sp/>ptycho)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptycho.<ref refid="structPOptAlgorithm_1abec0db9e1f00d5267327d02da5161d19" kindref="member">gpus</ref>.size();</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="ptycho_8hpp_1a84db02ad465b040943703c8bfa2de0ff" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ptycho_8hpp_1a84db02ad465b040943703c8bfa2de0ff" kindref="member">ptycho_num_modes</ref>(<ref refid="structPOptAlgorithm" kindref="compound">POptAlgorithm</ref>&amp;<sp/>ptycho)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptycho.<ref refid="structPOptAlgorithm_1aa0bb2bf38b8e6e0126ff0e21fb7203d6" kindref="member">probe</ref>-&gt;sizez;</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="ptycho_8hpp_1a7c407959761feaf187a9876422f155a2" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="ptycho_8hpp_1a7c407959761feaf187a9876422f155a2" kindref="member">ptycho_cur_batch_zsize</ref>(<ref refid="structPOptAlgorithm" kindref="compound">POptAlgorithm</ref>&amp;<sp/>ptycho,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>batch_idx)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptycho.<ref refid="structPOptAlgorithm_1a96bb15bd81f718c72d585c8ed611eab9" kindref="member">rois</ref>[batch_idx]-&gt;sizez;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="ptycho_8hpp_1a29e6ab2719a0f15f98956fbf7e113115" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="ptycho_8hpp_1a29e6ab2719a0f15f98956fbf7e113115" kindref="member">ptycho_batch_size</ref>(<ref refid="structPOptAlgorithm" kindref="compound">POptAlgorithm</ref>&amp;<sp/>ptycho)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptycho.<ref refid="structPOptAlgorithm_1a3b7ba09622974d03379e1028946e6111" kindref="member">multibatchsize</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="ptycho_8hpp_1a1911ebcdd9be52014b087a48f65625fe" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="ptycho_8hpp_1a1911ebcdd9be52014b087a48f65625fe" kindref="member">ptycho_cur_batch_gpu_zsize</ref>(<ref refid="structPOptAlgorithm" kindref="compound">POptAlgorithm</ref>&amp;<sp/>ptycho,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>batch_idx,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>gpu_idx)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*ptycho.<ref refid="structPOptAlgorithm_1a96bb15bd81f718c72d585c8ed611eab9" kindref="member">rois</ref>[batch_idx])[gpu_idx].sizez;</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ptycho_8hpp_1a6dbc166eb113b0bb3d8fd4db5a21fab4" kindref="member">ProjectProbe</ref>(<ref refid="structPOptAlgorithm" kindref="compound">POptAlgorithm</ref>&amp;<sp/>ptycho,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>section);</highlight></codeline>
<codeline lineno="127"><highlight class="comment">//void<sp/>project_reciprocal_space(POptAlgorithm&amp;<sp/>ptycho,<sp/>int<sp/>difpadindex,<sp/>int<sp/>g,<sp/>bool<sp/>isGradPm);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ptycho_8hpp_1a8f83c3b33c93ae2f6a80911674f7c9a1" kindref="member">project_reciprocal_space</ref>(<ref refid="structPOptAlgorithm" kindref="compound">POptAlgorithm</ref>&amp;<sp/>ptycho,<sp/>rImage*<sp/>difpads,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>g,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isGradPm);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ptycho_8hpp_1ab256bbc9d29fadf078222578dc77c0a7" kindref="member">DestroyPOptAlgorithm</ref>(<ref refid="structPOptAlgorithm" kindref="compound">POptAlgorithm</ref>*&amp;<sp/>ptycho);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><ref refid="structPOptAlgorithm" kindref="compound">POptAlgorithm</ref>*<sp/><ref refid="ptycho_8hpp_1a5e498e311a9f047b1fa83e808a5e7577" kindref="member">CreatePOptAlgorithm</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>difpads,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dim3&amp;<sp/>difshape,<sp/>complex*<sp/>probe,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dim3&amp;<sp/>probeshape,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>complex*<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dim3&amp;<sp/>objshape,<sp/><ref refid="structROI" kindref="compound">ROI</ref>*<sp/>rois,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numrois,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>batchsize,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>rfact,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;&amp;<sp/>gpus,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>objsupp,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>probesupp,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numobjsupp,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>sigmask,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>geometricsteps,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>background,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>probef1,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>step_obj,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>step_probe,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>reg_obj,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>reg_probe);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>dtype&gt;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ptycho_8hpp_1a58f3c3cd01384b311517f1be519e4d81" kindref="member">ProjectPhiToProbe</ref>(<ref refid="structPOptAlgorithm" kindref="compound">POptAlgorithm</ref>&amp;<sp/>ptycho,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>section,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MImage&lt;dtype&gt;&amp;<sp/>Phi,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bNormalizeFFT,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isGradPm);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ptycho_8hpp_1a1e79a213447a667128a958e4383d2f7d" kindref="member">ApplyProbeUpdate</ref>(<ref refid="structPOptAlgorithm" kindref="compound">POptAlgorithm</ref>&amp;<sp/>ptycho,<sp/>cImage&amp;<sp/>velocity,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>stepsize,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>momentum,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>epsilon);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ptycho_8hpp_1ae6665768898313d181d9c50cd38a6684" kindref="member">ApplySupport</ref>(cImage&amp;<sp/>img,<sp/>rImage&amp;<sp/>support,<sp/>std::vector&lt;float&gt;&amp;<sp/>SupportSizes);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="structRAAR" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structRAAR" kindref="compound">RAAR</ref><sp/>{</highlight></codeline>
<codeline lineno="154" refid="structRAAR_1a880063ae295e76c0944db229b10663d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structPOptAlgorithm" kindref="compound">POptAlgorithm</ref>*<sp/><ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155" refid="structRAAR_1a1b569a3ce99dbca5f888895c4c8c64d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;hcMImage*&gt;<sp/><ref refid="structRAAR_1a1b569a3ce99dbca5f888895c4c8c64d2" kindref="member">phistack</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="156" refid="structRAAR_1aa8378cbd3569222923ff0305d9030dbf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structRAAR_1aa8378cbd3569222923ff0305d9030dbf" kindref="member">isGradPm</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157" refid="structRAAR_1a2026eecf9b498277249fcdc5295f0847" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>complex*<sp/><ref refid="structRAAR_1a2026eecf9b498277249fcdc5295f0847" kindref="member">wavefront</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158" refid="structRAAR_1ae9ee13d51aaa5be9847c90098b28d07f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structRAAR_1ae9ee13d51aaa5be9847c90098b28d07f" kindref="member">beta</ref><sp/>=<sp/>0.9f;</highlight></codeline>
<codeline lineno="159"><highlight class="normal">};</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><ref refid="structRAAR" kindref="compound">RAAR</ref>*<sp/><ref refid="ptycho_8hpp_1ae1b9df742b633f0babaef337af8b7ae9" kindref="member">CreateRAAR</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>difpads,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dim3&amp;<sp/>difshape,<sp/>complex*<sp/>probe,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dim3&amp;<sp/>probeshape,<sp/>complex*<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dim3&amp;<sp/>objshape,<sp/><ref refid="structROI" kindref="compound">ROI</ref>*<sp/>rois,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numrois,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>batchsize,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>rfact,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;&amp;<sp/>gpus,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>objsupp,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>probesupp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numobjsupp,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>sigmask,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>geometricsteps,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>background,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>probef1,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>step_obj,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>step_probe,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>reg_obj,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>reg_probe);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ptycho_8hpp_1a63413b7b0c2a5b36b5595ff9a23ce9af" kindref="member">DestroyRAAR</ref>(<ref refid="structRAAR" kindref="compound">RAAR</ref>*&amp;<sp/>raar);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ptycho_8hpp_1a753690d19a69c7db210d14439c0d56cf" kindref="member">RAARRun</ref>(<ref refid="structRAAR" kindref="compound">RAAR</ref>&amp;<sp/>raar,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iter);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ptycho_8hpp_1a4f6cf0259cde9fbaad6212c802c64874" kindref="member">RAARProjectProbe</ref>(<ref refid="structRAAR" kindref="compound">RAAR</ref>&amp;<sp/>raar,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>section);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ptycho_8hpp_1a3ef2e472fc5918a16aaffc614254bd71" kindref="member">RAARApplyObjectUpdate</ref>(<ref refid="structRAAR" kindref="compound">RAAR</ref>&amp;<sp/>raar,<sp/>cImage&amp;<sp/>velocity,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>stepsize,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>momentum,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>epsilon);</highlight></codeline>
<codeline lineno="184"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ptycho_8hpp_1a6f84a4b01057c3125c53c508e08bdd6a" kindref="member">RAARApplyProbeUpdate</ref>(<ref refid="structRAAR" kindref="compound">RAAR</ref>&amp;<sp/>raar,<sp/>cImage&amp;<sp/>velocity,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>stepsize,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>momentum,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>epsilon);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal">__global__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ptycho_8hpp_1a8d4daceb323256469196633426c8e859" kindref="member">KGLExitwave</ref>(GArray&lt;complex&gt;<sp/>exitwave,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GArray&lt;complex&gt;<sp/>probe,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GArray&lt;complex&gt;<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GArray&lt;ROI&gt;<sp/>rois);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal">__global__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ptycho_8hpp_1a69032373905c1f0f252d632abda96fe3" kindref="member">KGLPs</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GArray&lt;complex&gt;<sp/>probe,<sp/>GArray&lt;complex&gt;<sp/>object_acc,<sp/>GArray&lt;float&gt;<sp/>object_div,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GArray&lt;complex&gt;<sp/>p_pm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GArray&lt;ROI&gt;<sp/>rois);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal">__global__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ptycho_8hpp_1acc7afe1428c039847929f5f49777b1b9" kindref="member">k_project_reciprocal_space</ref>(GArray&lt;complex&gt;<sp/>exitwave,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GArray&lt;float&gt;<sp/>difpads,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>rfactors,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>upsample,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nummodes,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GArray&lt;float&gt;<sp/>sigmask,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>geometricsteps,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bIsGrad,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>background,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>bkgaccum);</highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="structGLim" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structGLim" kindref="compound">GLim</ref><sp/>{</highlight></codeline>
<codeline lineno="202" refid="structGLim_1a8380dd0d1b45c249f8e0f15b216b8557" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structPOptAlgorithm" kindref="compound">POptAlgorithm</ref>*<sp/><ref refid="structGLim_1a8380dd0d1b45c249f8e0f15b216b8557" kindref="member">ptycho</ref>;</highlight></codeline>
<codeline lineno="203" refid="structGLim_1a46ed39a7d23fb49b99f781dfada791f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structGLim_1a46ed39a7d23fb49b99f781dfada791f4" kindref="member">isGradPm</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="204"><highlight class="normal">};</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ptycho_8hpp_1adf1e12ecffa95a1063f52c4d501f67a9" kindref="member">GLimRun</ref>(<ref refid="structGLim" kindref="compound">GLim</ref>&amp;<sp/>glim,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iter);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><ref refid="structGLim" kindref="compound">GLim</ref>*<sp/><ref refid="ptycho_8hpp_1a0612533b823e68af91aedcf9d7c79dac" kindref="member">CreateGLim</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>difpads,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dim3&amp;<sp/>difshape,<sp/>complex*<sp/>probe,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dim3&amp;<sp/>probeshape,<sp/>complex*<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dim3&amp;<sp/>objshape,<sp/><ref refid="structROI" kindref="compound">ROI</ref>*<sp/>rois,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numrois,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>batchsize,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>rfact,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;&amp;<sp/>gpus,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>objsupp,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>probesupp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numobjsupp,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>sigmask,</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>geometricsteps,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>background,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>probef1,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>step_obj,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>step_probe,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>reg_obj,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>reg_probe);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ptycho_8hpp_1a0fd2fbf2ef23a7d9c8bdd81e5c7e1f75" kindref="member">DestroyGLim</ref>(<ref refid="structGLim" kindref="compound">GLim</ref>*&amp;<sp/>glim);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ptycho_8hpp_1aef6b619830608e386b0bfb0655011be0" kindref="member">GLimProjectProbe</ref>(<ref refid="structGLim" kindref="compound">GLim</ref>&amp;<sp/>glim,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>section);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="structPie" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structPie" kindref="compound">Pie</ref><sp/>{</highlight></codeline>
<codeline lineno="220" refid="structPie_1a9c1042be5ded02971640e92ddf44c911" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structPOptAlgorithm" kindref="compound">POptAlgorithm</ref>*<sp/><ref refid="structPie_1a9c1042be5ded02971640e92ddf44c911" kindref="member">ptycho</ref>;</highlight></codeline>
<codeline lineno="221" refid="structPie_1a36aef3a7ee4e24bdefab937387442d99" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structPie_1a36aef3a7ee4e24bdefab937387442d99" kindref="member">isGradPm</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="222"><highlight class="normal">};</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><ref refid="structPie" kindref="compound">Pie</ref>*<sp/><ref refid="ptycho_8hpp_1ad3eaf7b0e0d7a760572bb4a385d128d8" kindref="member">CreatePie</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>difpads,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dim3&amp;<sp/>difshape,</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>complex*<sp/>probe,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dim3&amp;<sp/>probeshape,</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>complex*<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dim3&amp;<sp/>objshape,</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structROI" kindref="compound">ROI</ref>*<sp/>rois,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numrois,</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>batchsize,</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>rfact,</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;&amp;<sp/>gpus,</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>objsupp,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>probesupp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numobjsupp,</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>sigmask,<sp/></highlight><highlight class="comment">//TODO:<sp/>can<sp/>we<sp/>remove<sp/>sigmask,<sp/>geometricsteps,<sp/>background<sp/>and<sp/>probef1?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>geometricsteps,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>background,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>probef1,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>step_object,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>step_probe,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>reg_obj,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>reg_probe);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ptycho_8hpp_1a0c41d92a50ebf6984862d474545e5a34" kindref="member">DestroyPie</ref>(<ref refid="structPie" kindref="compound">Pie</ref>*&amp;<sp/>pie);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ptycho_8hpp_1ad47895342ed5f0c3d83376afa2e576ce" kindref="member">PieRun</ref>(<ref refid="structPie" kindref="compound">Pie</ref>&amp;<sp/>pie,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iterations);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="247" refid="ptycho_8hpp_1a85d257ca7965c110ed39911452d19fff" refkind="member"><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="ptycho_8hpp_1a85d257ca7965c110ed39911452d19fff" kindref="member">NoiseModel</ref><sp/>{<sp/><ref refid="ptycho_8hpp_1a85d257ca7965c110ed39911452d19fffa92e2a876702d06925b281147586486b9" kindref="member">EUCLID</ref>,<sp/><ref refid="ptycho_8hpp_1a85d257ca7965c110ed39911452d19fffa37a2f93fd56db2dd5f74780e8bca23b3" kindref="member">GAUSS</ref>,<sp/><ref refid="ptycho_8hpp_1a85d257ca7965c110ed39911452d19fffa92a9a9519a6a4f5edd0b2694fe1c9122" kindref="member">POISSON</ref>,<sp/><ref refid="ptycho_8hpp_1a85d257ca7965c110ed39911452d19fffabb4784231ff45108ee20bad16e4a2e8c" kindref="member">DEAD</ref>,<sp/><ref refid="ptycho_8hpp_1a85d257ca7965c110ed39911452d19fffa516a2342953891f249b58ff1c3943723" kindref="member">MIXED</ref><sp/>};</highlight></codeline>
    </programlisting>
    <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/inc/ptycho.hpp"/>
  </compounddef>
</doxygen>
