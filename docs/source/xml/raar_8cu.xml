<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="raar_8cu" kind="file" language="C++">
    <compoundname>raar.cu</compoundname>
    <includes local="no">cstddef</includes>
    <includes refid="ptycho_8hpp" local="yes">ptycho.hpp</includes>
    <includes local="no">common/logger.hpp</includes>
    <includes local="no">common/types.hpp</includes>
    <includes local="no">common/utils.hpp</includes>
    <incdepgraph>
      <node id="5">
        <label>common/complex.hpp</label>
      </node>
      <node id="8">
        <label>cufft.h</label>
      </node>
      <node id="7">
        <label>propagator.hpp</label>
        <link refid="propagator_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/raar.cu</label>
        <link refid="raar_8cu"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
      <node id="11">
        <label>common/utils.hpp</label>
      </node>
      <node id="10">
        <label>common/logger.hpp</label>
      </node>
      <node id="3">
        <label>ptycho.hpp</label>
        <link refid="ptycho_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>cstddef</label>
      </node>
      <node id="9">
        <label>types.hpp</label>
      </node>
      <node id="6">
        <label>common/types.hpp</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="raar_8cu_1a6909cff96414cf30bf88ae967221d7ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__global__ void</type>
        <definition>__global__ void k_RAAR_reflect_Rspace</definition>
        <argsstring>(GArray&lt; complex &gt; exitwave, const GArray&lt; complex &gt; probe, const GArray&lt; complex &gt; object, const GArray&lt; complex16 &gt; wavefront, const ROI *p_rois, float objbeta)</argsstring>
        <name>k_RAAR_reflect_Rspace</name>
        <param>
          <type>GArray&lt; complex &gt;</type>
          <declname>exitwave</declname>
        </param>
        <param>
          <type>const GArray&lt; complex &gt;</type>
          <declname>probe</declname>
        </param>
        <param>
          <type>const GArray&lt; complex &gt;</type>
          <declname>object</declname>
        </param>
        <param>
          <type>const GArray&lt; complex16 &gt;</type>
          <declname>wavefront</declname>
        </param>
        <param>
          <type>const <ref refid="structROI" kindref="compound">ROI</ref> *</type>
          <declname>p_rois</declname>
        </param>
        <param>
          <type>float</type>
          <declname>objbeta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CUDA Kernel. Computes the real space reflector. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/raar.cu" line="14" column="17" bodyfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/raar.cu" bodystart="14" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="raar_8cu_1a9cef09bbc9b73a30a0171ddf35dad326" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__global__ void</type>
        <definition>__global__ void k_RAAR_wavefront_update</definition>
        <argsstring>(const GArray&lt; complex &gt; object, const GArray&lt; complex &gt; probe, GArray&lt; complex &gt; object_acc, GArray&lt; float &gt; object_div, const GArray&lt; complex &gt; p_pm, GArray&lt; complex16 &gt; phistack, const ROI *p_rois, float objbeta)</argsstring>
        <name>k_RAAR_wavefront_update</name>
        <param>
          <type>const GArray&lt; complex &gt;</type>
          <declname>object</declname>
        </param>
        <param>
          <type>const GArray&lt; complex &gt;</type>
          <declname>probe</declname>
        </param>
        <param>
          <type>GArray&lt; complex &gt;</type>
          <declname>object_acc</declname>
        </param>
        <param>
          <type>GArray&lt; float &gt;</type>
          <declname>object_div</declname>
        </param>
        <param>
          <type>const GArray&lt; complex &gt;</type>
          <declname>p_pm</declname>
        </param>
        <param>
          <type>GArray&lt; complex16 &gt;</type>
          <declname>phistack</declname>
        </param>
        <param>
          <type>const <ref refid="structROI" kindref="compound">ROI</ref> *</type>
          <declname>p_rois</declname>
        </param>
        <param>
          <type>float</type>
          <declname>objbeta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CUDA Kernel. Updates phistack based on the reciprocal space projetor. Additionally, projects the new phistack to object space. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/raar.cu" line="38" column="17" bodyfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/raar.cu" bodystart="38" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="raar_8cu_1afb2337cdad7e52e151d7153db3ecaa17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__global__ void</type>
        <definition>__global__ void KRAAR_ObjPs</definition>
        <argsstring>(const GArray&lt; complex &gt; object, const GArray&lt; complex &gt; probe, const GArray&lt; complex16 &gt; phistack, const GArray&lt; ROI &gt; rois, GArray&lt; complex &gt; object_acc, GArray&lt; float &gt; object_div)</argsstring>
        <name>KRAAR_ObjPs</name>
        <param>
          <type>const GArray&lt; complex &gt;</type>
          <declname>object</declname>
        </param>
        <param>
          <type>const GArray&lt; complex &gt;</type>
          <declname>probe</declname>
        </param>
        <param>
          <type>const GArray&lt; complex16 &gt;</type>
          <declname>phistack</declname>
        </param>
        <param>
          <type>const GArray&lt; <ref refid="structROI" kindref="compound">ROI</ref> &gt;</type>
          <declname>rois</declname>
        </param>
        <param>
          <type>GArray&lt; complex &gt;</type>
          <declname>object_acc</declname>
        </param>
        <param>
          <type>GArray&lt; float &gt;</type>
          <declname>object_div</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CUDA Kernel. Projects phistack to the object subspace. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/raar.cu" line="76" column="17" bodyfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/raar.cu" bodystart="76" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="raar_8cu_1ae1b9df742b633f0babaef337af8b7ae9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structRAAR" kindref="compound">RAAR</ref> *</type>
        <definition>RAAR* CreateRAAR</definition>
        <argsstring>(float *difpads, const dim3 &amp;difshape, complex *probe, const dim3 &amp;probeshape, complex *object, const dim3 &amp;objshape, ROI *rois, int numrois, int batchsize, float *rfact, const std::vector&lt; int &gt; &amp;gpus, float *objsupp, float *probesupp, int numobjsupp, float *sigmask, int geometricsteps, float *background, float probef1, float step_obj, float step_probe, float reg_obj, float reg_probe)</argsstring>
        <name>CreateRAAR</name>
        <param>
          <type>float *</type>
          <declname>difpads</declname>
        </param>
        <param>
          <type>const dim3 &amp;</type>
          <declname>difshape</declname>
        </param>
        <param>
          <type>complex *</type>
          <declname>probe</declname>
        </param>
        <param>
          <type>const dim3 &amp;</type>
          <declname>probeshape</declname>
        </param>
        <param>
          <type>complex *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>const dim3 &amp;</type>
          <declname>objshape</declname>
        </param>
        <param>
          <type><ref refid="structROI" kindref="compound">ROI</ref> *</type>
          <declname>rois</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numrois</declname>
        </param>
        <param>
          <type>int</type>
          <declname>batchsize</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>rfact</declname>
        </param>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>gpus</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>objsupp</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>probesupp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numobjsupp</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>sigmask</declname>
        </param>
        <param>
          <type>int</type>
          <declname>geometricsteps</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>background</declname>
        </param>
        <param>
          <type>float</type>
          <declname>probef1</declname>
        </param>
        <param>
          <type>float</type>
          <declname>step_obj</declname>
        </param>
        <param>
          <type>float</type>
          <declname>step_probe</declname>
        </param>
        <param>
          <type>float</type>
          <declname>reg_obj</declname>
        </param>
        <param>
          <type>float</type>
          <declname>reg_probe</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor: Allocates phistack. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/raar.cu" line="106" column="6" bodyfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/raar.cu" bodystart="106" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="raar_8cu_1a63413b7b0c2a5b36b5595ff9a23ce9af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DestroyRAAR</definition>
        <argsstring>(RAAR *&amp;raar)</argsstring>
        <name>DestroyRAAR</name>
        <param>
          <type><ref refid="structRAAR" kindref="compound">RAAR</ref> *&amp;</type>
          <declname>raar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/raar.cu" line="136" column="6" bodyfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/raar.cu" bodystart="136" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="raar_8cu_1a181f09e1ced3753368a2619b2db58841" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RAARProjectProbe</definition>
        <argsstring>(RAAR &amp;raar, int section, hcMImage &amp;wavefront)</argsstring>
        <name>RAARProjectProbe</name>
        <param>
          <type><ref refid="structRAAR" kindref="compound">RAAR</ref> &amp;</type>
          <declname>raar</declname>
        </param>
        <param>
          <type>int</type>
          <declname>section</declname>
        </param>
        <param>
          <type>hcMImage &amp;</type>
          <declname>wavefront</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/raar.cu" line="145" column="6" bodyfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/raar.cu" bodystart="145" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="raar_8cu_1a3ef2e472fc5918a16aaffc614254bd71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RAARApplyObjectUpdate</definition>
        <argsstring>(RAAR &amp;raar, cImage &amp;velocity, float stepsize, float momentum, float epsilon)</argsstring>
        <name>RAARApplyObjectUpdate</name>
        <param>
          <type><ref refid="structRAAR" kindref="compound">RAAR</ref> &amp;</type>
          <declname>raar</declname>
        </param>
        <param>
          <type>cImage &amp;</type>
          <declname>velocity</declname>
        </param>
        <param>
          <type>float</type>
          <declname>stepsize</declname>
        </param>
        <param>
          <type>float</type>
          <declname>momentum</declname>
        </param>
        <param>
          <type>float</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Applies KRAAR_ObjPs and updates the object estimate. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/raar.cu" line="152" column="6" bodyfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/raar.cu" bodystart="152" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="raar_8cu_1a6f84a4b01057c3125c53c508e08bdd6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RAARApplyProbeUpdate</definition>
        <argsstring>(RAAR &amp;raar, cImage &amp;velocity, float stepsize, float momentum, float epsilon)</argsstring>
        <name>RAARApplyProbeUpdate</name>
        <param>
          <type><ref refid="structRAAR" kindref="compound">RAAR</ref> &amp;</type>
          <declname>raar</declname>
        </param>
        <param>
          <type>cImage &amp;</type>
          <declname>velocity</declname>
        </param>
        <param>
          <type>float</type>
          <declname>stepsize</declname>
        </param>
        <param>
          <type>float</type>
          <declname>momentum</declname>
        </param>
        <param>
          <type>float</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Projects phistack to the probe subspace and calls Super::ApplyProbeUpdate </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/raar.cu" line="180" column="6" bodyfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/raar.cu" bodystart="180" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="raar_8cu_1a3588957c2d3f959c192b2fcf2ae3594f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_wavefront</definition>
        <argsstring>(RAAR &amp;raar)</argsstring>
        <name>init_wavefront</name>
        <param>
          <type><ref refid="structRAAR" kindref="compound">RAAR</ref> &amp;</type>
          <declname>raar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/raar.cu" line="193" column="6" bodyfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/raar.cu" bodystart="193" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="raar_8cu_1a5d561d117c49a8d76137081a17b0d58e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RAARRun</definition>
        <argsstring>(RAAR &amp;raar, int iterations)</argsstring>
        <name>RAARRun</name>
        <param>
          <type><ref refid="structRAAR" kindref="compound">RAAR</ref> &amp;</type>
          <declname>raar</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iterations</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="structRAAR" kindref="compound">RAAR</ref> iteration loop. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/raar.cu" line="204" column="6" bodyfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/raar.cu" bodystart="204" bodyend="316"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="2"><highlight class="preprocessor">#include<sp/>&lt;cstddef&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ptycho_8hpp" kindref="compound">ptycho.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;common/logger.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;common/types.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;common/utils.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal">__global__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="raar_8cu_1a6909cff96414cf30bf88ae967221d7ab" kindref="member">k_RAAR_reflect_Rspace</ref>(GArray&lt;complex&gt;<sp/>exitwave,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GArray&lt;complex&gt;<sp/>probe,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GArray&lt;complex&gt;<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GArray&lt;complex16&gt;<sp/>wavefront,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structROI" kindref="compound">ROI</ref><sp/>*p_rois,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>objbeta)<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>blockIdx.x<sp/>*<sp/>blockDim.x<sp/>+<sp/>threadIdx.x;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(idx<sp/>&gt;=<sp/>probe.shape.x)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idy<sp/>=<sp/>blockIdx.y<sp/>*<sp/>blockDim.y<sp/>+<sp/>threadIdx.y;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idz<sp/>=<sp/>blockIdx.z;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>objposx<sp/>=<sp/>idx<sp/>+<sp/>(int)(p_rois[idz].x);<sp/></highlight><highlight class="comment">//<sp/>getting<sp/>floor<sp/>the<sp/>integer<sp/>value<sp/>from<sp/>float<sp/>pixel<sp/>value.<sp/>Should<sp/>we<sp/>get<sp/>the<sp/>nearest<sp/>integer?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>objposy<sp/>=<sp/>idy<sp/>+<sp/>(int)(p_rois[idz].y);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>complex<sp/>obj<sp/>=<sp/>object(objposy,<sp/>objposx);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_modes<sp/>=<sp/>probe.shape.z;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>0;<sp/>m<sp/>&lt;<sp/>num_modes;<sp/>m++)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>complex<sp/>ew<sp/>=<sp/>probe(m,<sp/>idy,<sp/>idx)<sp/>*<sp/>obj<sp/>*<sp/>2.0f<sp/>-</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>complex(wavefront(idz<sp/>*<sp/>probe.shape.z<sp/>+<sp/>m,<sp/>idy,<sp/>idx));</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exitwave(idz<sp/>*<sp/>probe.shape.z<sp/>+<sp/>m,<sp/>idy,<sp/>idx)<sp/>=<sp/>ew;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">__global__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="raar_8cu_1a9cef09bbc9b73a30a0171ddf35dad326" kindref="member">k_RAAR_wavefront_update</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GArray&lt;complex&gt;<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GArray&lt;complex&gt;<sp/>probe,<sp/>GArray&lt;complex&gt;<sp/>object_acc,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GArray&lt;float&gt;<sp/>object_div,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GArray&lt;complex&gt;<sp/>p_pm,<sp/>GArray&lt;complex16&gt;<sp/>phistack,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structROI" kindref="compound">ROI</ref><sp/>*p_rois,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>objbeta)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>blockIdx.x<sp/>*<sp/>blockDim.x<sp/>+<sp/>threadIdx.x;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(idx<sp/>&gt;=<sp/>probe.shape.x)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idy<sp/>=<sp/>blockIdx.y<sp/>*<sp/>blockDim.y<sp/>+<sp/>threadIdx.y;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idz<sp/>=<sp/>blockIdx.z;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>objposx<sp/>=<sp/>idx<sp/>+<sp/>(int)(p_rois[idz].x);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>objposy<sp/>=<sp/>idy<sp/>+<sp/>(int)(p_rois[idz].y);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>complex<sp/>obj<sp/>=<sp/>object(objposy,<sp/>objposx);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>complex<sp/>objacc<sp/>=<sp/>complex(0);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>objdiv<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>0;<sp/>m<sp/>&lt;<sp/>probe.shape.z;<sp/>m++)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>complex<sp/>cprobe<sp/>=<sp/>probe(m,<sp/>idy,<sp/>idx);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//const<sp/>complex<sp/>pm<sp/>=<sp/>p_pm(blockIdx.z<sp/>*<sp/>probe.shape.z<sp/>+<sp/>m,<sp/>idy,<sp/>idx)<sp/>/<sp/>float(probe.shape.x<sp/>*<sp/>probe.shape.y);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>complex<sp/>pm<sp/>=<sp/>p_pm(blockIdx.z<sp/>*<sp/>probe.shape.z<sp/>+<sp/>m,<sp/>idy,<sp/>idx);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>complex<sp/>phi<sp/>=<sp/>complex(phistack(blockIdx.z<sp/>*<sp/>probe.shape.z<sp/>+<sp/>m,<sp/>idy,<sp/>idx));</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phi<sp/>=<sp/>(pm<sp/>+<sp/>phi)<sp/>*<sp/>objbeta<sp/>+<sp/>obj<sp/>*<sp/>cprobe<sp/>*<sp/>(1<sp/>-<sp/>2<sp/>*<sp/>objbeta);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phistack(blockIdx.z<sp/>*<sp/>probe.shape.z<sp/>+<sp/>m,<sp/>idy,<sp/>idx)<sp/>=<sp/>complex16(phi);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objacc<sp/>+=<sp/>phi<sp/>*<sp/>cprobe.conj();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objdiv<sp/>+=<sp/>cprobe.abs2();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>objacc<sp/>-=<sp/>obj<sp/>*<sp/>objdiv;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>atomicAdd(&amp;object_acc(objposy,<sp/>objposx),<sp/>objacc);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>atomicAdd(&amp;object_div(objposy,<sp/>objposx),<sp/>objdiv);</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal">__global__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="raar_8cu_1afb2337cdad7e52e151d7153db3ecaa17" kindref="member">KRAAR_ObjPs</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GArray&lt;complex&gt;<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GArray&lt;complex&gt;<sp/>probe,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GArray&lt;complex16&gt;<sp/>phistack,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GArray&lt;ROI&gt;<sp/>rois,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GArray&lt;complex&gt;<sp/>object_acc,<sp/>GArray&lt;float&gt;<sp/>object_div)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>objidx<sp/>=<sp/>blockIdx.x<sp/>*<sp/>blockDim.x<sp/>+<sp/>threadIdx.x;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(objidx<sp/>&gt;=<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">.shape.x)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>objidy<sp/>=<sp/>blockIdx.y<sp/>*<sp/>blockDim.y<sp/>+<sp/>threadIdx.y;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>complex<sp/>obj<sp/>=<sp/>object(objidy,<sp/>objidx);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>complex<sp/>objacc<sp/>=<sp/>complex(0);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>objdiv<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/>rois.shape.z;<sp/>p++)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pidx<sp/>=<sp/>objidx<sp/>-<sp/>(int)rois(p,<sp/>0,<sp/>0).x;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pidy<sp/>=<sp/>objidy<sp/>-<sp/>(int)rois(p,<sp/>0,<sp/>0).y;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pidx<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>pidy<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>pidx<sp/>&lt;<sp/>probe.shape.x<sp/>&amp;&amp;<sp/>pidy<sp/>&lt;<sp/>probe.shape.y)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>0;<sp/>m<sp/>&lt;<sp/>probe.shape.z;<sp/>m++)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>complex<sp/>cprobe<sp/>=<sp/>probe(m,<sp/>pidy,<sp/>pidx);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objacc<sp/>+=<sp/>cprobe.conj()<sp/>*<sp/>complex(phistack(p<sp/>*<sp/>probe.shape.z<sp/>+<sp/>m,<sp/>pidy,<sp/>pidx));</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objdiv<sp/>+=<sp/>cprobe.abs2();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>object_acc(objidy,<sp/>objidx)<sp/>+=<sp/>objacc<sp/>-<sp/>obj<sp/>*<sp/>objdiv;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>object_div(objidy,<sp/>objidx)<sp/>+=<sp/>objdiv;</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><ref refid="structRAAR" kindref="compound">RAAR</ref><sp/>*<ref refid="raar_8cu_1ae1b9df742b633f0babaef337af8b7ae9" kindref="member">CreateRAAR</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*difpads,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dim3<sp/>&amp;difshape,<sp/>complex<sp/>*probe,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dim3<sp/>&amp;probeshape,<sp/>complex<sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dim3<sp/>&amp;objshape,<sp/><ref refid="structROI" kindref="compound">ROI</ref><sp/>*rois,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numrois,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>batchsize,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*rfact,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;<sp/>&amp;gpus,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*objsupp,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*probesupp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numobjsupp,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*sigmask,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>geometricsteps,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*background,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>probef1,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>step_obj,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>step_probe,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>reg_obj,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>reg_probe)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structRAAR" kindref="compound">RAAR</ref><sp/>*raar<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structRAAR" kindref="compound">RAAR</ref>();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>raar-&gt;<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref><sp/>=</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ptycho_8cu_1ac6d77be77215d1df299307ef6a2175dc" kindref="member">CreatePOptAlgorithm</ref>(difpads,<sp/>difshape,<sp/>probe,<sp/>probeshape,<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>objshape,<sp/>rois,<sp/>numrois,<sp/>batchsize,<sp/>rfact,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gpus,<sp/>objsupp,<sp/>probesupp,<sp/>numobjsupp,<sp/>sigmask,<sp/>geometricsteps,<sp/>background,<sp/>probef1,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>step_obj,<sp/>step_probe,<sp/>reg_obj,<sp/>reg_probe);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>wavefront_size<sp/>=<sp/>raar-&gt;<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1aa0bb2bf38b8e6e0126ff0e21fb7203d6" kindref="member">probe</ref>-&gt;size</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>raar-&gt;<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1ac24fac966485161d3bef7599ee42d679" kindref="member">total_num_rois</ref><sp/>*<sp/>raar-&gt;<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1abec0db9e1f00d5267327d02da5161d19" kindref="member">gpus</ref>.size();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>raar-&gt;<ref refid="structRAAR_1a2026eecf9b498277249fcdc5295f0847" kindref="member">wavefront</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>complex[wavefront_size];</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_batches<sp/>=<sp/><ref refid="ptycho_8hpp_1a97ec95d785a25d7a7ad2bac4ed1ff5ba" kindref="member">ptycho_num_batches</ref>(*raar-&gt;<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_batches;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>batchsize<sp/>=<sp/>raar-&gt;<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a96bb15bd81f718c72d585c8ed611eab9" kindref="member">rois</ref>[i]-&gt;arrays[0]-&gt;sizez;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>*newphistack<sp/>=</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>hcMImage(raar-&gt;<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1aa0bb2bf38b8e6e0126ff0e21fb7203d6" kindref="member">probe</ref>-&gt;sizex,<sp/>raar-&gt;<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1aa0bb2bf38b8e6e0126ff0e21fb7203d6" kindref="member">probe</ref>-&gt;sizey,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>batchsize<sp/>*<sp/>raar-&gt;<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1aa0bb2bf38b8e6e0126ff0e21fb7203d6" kindref="member">probe</ref>-&gt;sizez,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raar-&gt;<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1abec0db9e1f00d5267327d02da5161d19" kindref="member">gpus</ref>,<sp/>MemoryType::EAllocGPU);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newphistack-&gt;SetGPUToZero();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raar-&gt;<ref refid="structRAAR_1a1b569a3ce99dbca5f888895c4c8c64d2" kindref="member">phistack</ref>.push_back(newphistack);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>raar;</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="raar_8cu_1a63413b7b0c2a5b36b5595ff9a23ce9af" kindref="member">DestroyRAAR</ref>(<ref refid="structRAAR" kindref="compound">RAAR</ref><sp/>*&amp;raar)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>*phi<sp/>:<sp/>raar-&gt;<ref refid="structRAAR_1a1b569a3ce99dbca5f888895c4c8c64d2" kindref="member">phistack</ref>)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>phi;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ptycho_8cu_1a5b112da7aae5c2cf748894fffcca3056" kindref="member">DestroyPOptAlgorithm</ref>(raar-&gt;<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>raar<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="raar_8cu_1a181f09e1ced3753368a2619b2db58841" kindref="member">RAARProjectProbe</ref>(<ref refid="structRAAR" kindref="compound">RAAR</ref>&amp;<sp/>raar,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>section,<sp/>hcMImage&amp;<sp/>wavefront)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ptycho_8cu_1a298859823914cec4625ac4a405426582" kindref="member">ProjectPhiToProbe</ref>(*(raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>),<sp/>section,<sp/>wavefront,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>raar.<ref refid="structRAAR_1aa8378cbd3569222923ff0305d9030dbf" kindref="member">isGradPm</ref>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="raar_8cu_1a3ef2e472fc5918a16aaffc614254bd71" kindref="member">RAARApplyObjectUpdate</ref>(<ref refid="structRAAR" kindref="compound">RAAR</ref><sp/>&amp;raar,<sp/>cImage<sp/>&amp;velocity,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>stepsize,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>momentum,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>epsilon)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a4d304204018e1fe000740b0468d74566" kindref="member">object_acc</ref>-&gt;SetGPUToZero();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1ade9e24797a0b051d27502f3148230018" kindref="member">object_div</ref>-&gt;SetGPUToZero();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>dim3<sp/>blk<sp/>=<sp/>raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a506d977d84492238546e64d7b2f38f01" kindref="member">object</ref>-&gt;ShapeBlock();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>dim3<sp/>thr<sp/>=<sp/>raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a506d977d84492238546e64d7b2f38f01" kindref="member">object</ref>-&gt;ShapeThread();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>section<sp/>=<sp/>0;<sp/>section<sp/>&lt;<sp/>raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a96bb15bd81f718c72d585c8ed611eab9" kindref="member">rois</ref>.size();<sp/>section++)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>g<sp/>=<sp/>0;<sp/>g<sp/>&lt;<sp/>raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1abec0db9e1f00d5267327d02da5161d19" kindref="member">gpus</ref>.size();<sp/>g++)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a96bb15bd81f718c72d585c8ed611eab9" kindref="member">rois</ref>[section]-&gt;arrays[g]-&gt;sizez<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetDevice(raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1abec0db9e1f00d5267327d02da5161d19" kindref="member">gpus</ref>,<sp/>g);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KRAAR_ObjPs&lt;&lt;&lt;blk,<sp/>thr&gt;&gt;&gt;(raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a506d977d84492238546e64d7b2f38f01" kindref="member">object</ref>-&gt;arrays[g][0],<sp/>raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1aa0bb2bf38b8e6e0126ff0e21fb7203d6" kindref="member">probe</ref>-&gt;arrays[g][0],</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raar.<ref refid="structRAAR_1a1b569a3ce99dbca5f888895c4c8c64d2" kindref="member">phistack</ref>[section]-&gt;arrays[g][0],</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a96bb15bd81f718c72d585c8ed611eab9" kindref="member">rois</ref>[section]-&gt;arrays[g][0],</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a4d304204018e1fe000740b0468d74566" kindref="member">object_acc</ref>-&gt;arrays[g][0],<sp/>raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1ade9e24797a0b051d27502f3148230018" kindref="member">object_div</ref>-&gt;arrays[g][0]);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a506d977d84492238546e64d7b2f38f01" kindref="member">object</ref>-&gt;WeightedLerpSync(*raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a4d304204018e1fe000740b0468d74566" kindref="member">object_acc</ref>,<sp/>*raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1ade9e24797a0b051d27502f3148230018" kindref="member">object_div</ref>,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a28af23f00cd500b58e7145aeb57a16e2" kindref="member">objstep</ref>,<sp/>momentum,<sp/>velocity,<sp/>epsilon);</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="raar_8cu_1a6f84a4b01057c3125c53c508e08bdd6a" kindref="member">RAARApplyProbeUpdate</ref>(<ref refid="structRAAR" kindref="compound">RAAR</ref>&amp;<sp/>raar,<sp/>cImage<sp/>&amp;velocity,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>stepsize,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>momentum,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>epsilon)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1ae4a5ff5d2466dc0a8b59c4d65be2cc6b" kindref="member">probe_acc</ref>-&gt;SetGPUToZero();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a110d4fbd5c20c09a2044f8c7f5dd1876" kindref="member">probe_div</ref>-&gt;SetGPUToZero();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_batches<sp/>=<sp/><ref refid="ptycho_8hpp_1a97ec95d785a25d7a7ad2bac4ed1ff5ba" kindref="member">ptycho_num_batches</ref>(*raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>0;<sp/>d<sp/>&lt;<sp/>num_batches;<sp/>d++)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="raar_8cu_1a181f09e1ced3753368a2619b2db58841" kindref="member">RAARProjectProbe</ref>(raar,<sp/>d,<sp/>*raar.<ref refid="structRAAR_1a1b569a3ce99dbca5f888895c4c8c64d2" kindref="member">phistack</ref>[d]);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ptycho_8cu_1a3760b1da2405731ddcbe4728535475fc" kindref="member">ApplyProbeUpdate</ref>(*raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>,<sp/>velocity,<sp/>stepsize,<sp/>momentum,<sp/>epsilon);</highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="raar_8cu_1a3588957c2d3f959c192b2fcf2ae3594f" kindref="member">init_wavefront</ref>(<ref refid="structRAAR" kindref="compound">RAAR</ref>&amp;<sp/>raar)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>*wavefront<sp/>:<sp/>raar.<ref refid="structRAAR_1a1b569a3ce99dbca5f888895c4c8c64d2" kindref="member">phistack</ref>)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wavefront<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wavefront-&gt;SetGPUToZero();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="raar_8cu_1a5d561d117c49a8d76137081a17b0d58e" kindref="member">RAARRun</ref>(<ref refid="structRAAR" kindref="compound">RAAR</ref>&amp;<sp/>raar,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iterations)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>ssc_info(</highlight><highlight class="stringliteral">&quot;Starting<sp/>RAAR<sp/>iteration.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>ssc_event_start(</highlight><highlight class="stringliteral">&quot;RAAR<sp/>Run&quot;</highlight><highlight class="normal">,<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssc_param_int(</highlight><highlight class="stringliteral">&quot;iter&quot;</highlight><highlight class="normal">,<sp/>iterations),</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssc_param_int(</highlight><highlight class="stringliteral">&quot;difpadshape.x&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a92c4b4ea6b38caeb8e254aa30d48317b" kindref="member">difpadshape</ref>.x),</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssc_param_int(</highlight><highlight class="stringliteral">&quot;difpadshape.y&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a92c4b4ea6b38caeb8e254aa30d48317b" kindref="member">difpadshape</ref>.y),</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssc_param_int(</highlight><highlight class="stringliteral">&quot;difpadshape.z&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a92c4b4ea6b38caeb8e254aa30d48317b" kindref="member">difpadshape</ref>.z)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dim3<sp/>probeshape<sp/>=<sp/>raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1aa0bb2bf38b8e6e0126ff0e21fb7203d6" kindref="member">probe</ref>-&gt;Shape();</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="raar_8cu_1a3588957c2d3f959c192b2fcf2ae3594f" kindref="member">init_wavefront</ref>(raar);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a2278546d425d8708f7d5282439d541f2" kindref="member">geometricsteps</ref><sp/>&gt;<sp/>1)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>falta<sp/>entender<sp/>o<sp/>que<sp/>é<sp/>geometricsteps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssc_error(</highlight><highlight class="stringliteral">&quot;Error:<sp/>RAAR<sp/>does<sp/>not<sp/>support<sp/>flyscan&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(-1);<sp/></highlight><highlight class="comment">//<sp/>termina<sp/>o<sp/>programa.<sp/>Melhor<sp/>seria<sp/>subir<sp/>o<sp/>erro<sp/>e<sp/>python<sp/>decidir<sp/>o<sp/>que<sp/>fazer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>cImage<sp/>objvelocity(raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a506d977d84492238546e64d7b2f38f01" kindref="member">object</ref>-&gt;Shape());<sp/></highlight><highlight class="comment">//<sp/>imagem<sp/>complex<sp/>com<sp/>mesmo<sp/>shape<sp/>de<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>cImage<sp/>probevelocity(raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1aa0bb2bf38b8e6e0126ff0e21fb7203d6" kindref="member">probe</ref>-&gt;Shape());</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>objvelocity.SetGPUToZero();</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>probevelocity.SetGPUToZero();</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>time0<sp/>=<sp/>ssc_time();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dim3<sp/>difpadshape<sp/>=<sp/>raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a92c4b4ea6b38caeb8e254aa30d48317b" kindref="member">difpadshape</ref>;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iter<sp/>=<sp/>0;<sp/>iter<sp/>&lt;<sp/>iterations;<sp/>iter++)<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssc_event_start(</highlight><highlight class="stringliteral">&quot;Raar<sp/>iter&quot;</highlight><highlight class="normal">,<sp/>{<sp/>ssc_param_int(</highlight><highlight class="stringliteral">&quot;iter&quot;</highlight><highlight class="normal">,<sp/>iter)<sp/>});</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a7927b2f881d02a9170c59b1e387050ed" kindref="member">rfactors</ref>-&gt;SetGPUToZero();</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a4d304204018e1fe000740b0468d74566" kindref="member">object_acc</ref>-&gt;SetGPUToZero();</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1ade9e24797a0b051d27502f3148230018" kindref="member">object_div</ref>-&gt;SetGPUToZero();</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_batches<sp/>=<sp/><ref refid="ptycho_8hpp_1a97ec95d785a25d7a7ad2bac4ed1ff5ba" kindref="member">ptycho_num_batches</ref>(*raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>batch_idx<sp/>=<sp/>0;<sp/>batch_idx<sp/>&lt;<sp/>num_batches;<sp/>batch_idx++)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>difpad_batch_zsize<sp/>=<sp/>raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a96bb15bd81f718c72d585c8ed611eab9" kindref="member">rois</ref>[batch_idx]-&gt;sizez;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>global_idx<sp/>=<sp/>batch_idx<sp/>*<sp/>raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a3b7ba09622974d03379e1028946e6111" kindref="member">multibatchsize</ref>;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*difpad_batch_ptr<sp/>=<sp/>raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a8ec4655eee89ffd8bf45f8779d6ba098" kindref="member">cpudifpads</ref><sp/>+</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_idx<sp/>*<sp/>difpadshape.x<sp/>*<sp/>difpadshape.y;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>improve<sp/>so<sp/>we<sp/>can<sp/>avoid<sp/>reallocating<sp/>arrays<sp/>every<sp/>iteration,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>need<sp/>a<sp/>speedup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rMImage<sp/>cur_difpad(difpad_batch_ptr,<sp/>difpadshape.x,<sp/>difpadshape.y,<sp/>difpad_batch_zsize,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1abec0db9e1f00d5267327d02da5161d19" kindref="member">gpus</ref>,<sp/>MemoryType::EAllocGPU);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ngpus<sp/>=<sp/><ref refid="ptycho_8hpp_1ad52670044f5598683c76426564e3e8de" kindref="member">ptycho_num_gpus</ref>(*raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gpu_idx<sp/>=<sp/>0;<sp/>gpu_idx<sp/>&lt;<sp/>ngpus;<sp/>gpu_idx++)<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cImage*<sp/>current_exit_wave<sp/>=<sp/>raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a9ebbe9246bb2540b461b66067396ac0e" kindref="member">exitwave</ref>-&gt;arrays[gpu_idx];</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cImage*<sp/>current_object<sp/>=<sp/>raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a506d977d84492238546e64d7b2f38f01" kindref="member">object</ref>-&gt;arrays[gpu_idx];</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cImage*<sp/>current_probe<sp/>=<sp/>raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1aa0bb2bf38b8e6e0126ff0e21fb7203d6" kindref="member">probe</ref>-&gt;arrays[gpu_idx];</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Image2D&lt;complex16&gt;*<sp/>current_measurement<sp/>=<sp/>raar.<ref refid="structRAAR_1a1b569a3ce99dbca5f888895c4c8c64d2" kindref="member">phistack</ref>[batch_idx]-&gt;arrays[gpu_idx];</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rImage*<sp/>current_obj_div<sp/>=<sp/>raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1ade9e24797a0b051d27502f3148230018" kindref="member">object_div</ref>-&gt;arrays[gpu_idx];</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cImage*<sp/>current_obj_acc<sp/>=<sp/>raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a4d304204018e1fe000740b0468d74566" kindref="member">object_acc</ref>-&gt;arrays[gpu_idx];</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_difpad[gpu_idx].sizez<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetDevice(raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1abec0db9e1f00d5267327d02da5161d19" kindref="member">gpus</ref>,<sp/>gpu_idx);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dim3<sp/>blk<sp/>=<sp/>raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a9ebbe9246bb2540b461b66067396ac0e" kindref="member">exitwave</ref>-&gt;ShapeBlock();</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blk.z<sp/>=<sp/>cur_difpad[gpu_idx].sizez;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dim3<sp/>thr<sp/>=<sp/>raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a9ebbe9246bb2540b461b66067396ac0e" kindref="member">exitwave</ref>-&gt;ShapeThread();</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structROI" kindref="compound">ROI</ref>*<sp/>ptr_roi<sp/>=<sp/>raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a96bb15bd81f718c72d585c8ed611eab9" kindref="member">rois</ref>[batch_idx]-&gt;Ptr(gpu_idx);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k_RAAR_reflect_Rspace&lt;&lt;&lt;blk,<sp/>thr&gt;&gt;&gt;(*current_exit_wave,<sp/>*current_probe,<sp/>*current_object,<sp/>*current_measurement,<sp/>ptr_roi,<sp/>raar.<ref refid="structRAAR_1ae9ee13d51aaa5be9847c90098b28d07f" kindref="member">beta</ref>);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ptycho_8cu_1ad878deb8a9ac1ae105af1be65e74e3de" kindref="member">project_reciprocal_space</ref>(*raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_difpad.arrays[gpu_idx],<sp/>gpu_idx,<sp/>raar.<ref refid="structRAAR_1aa8378cbd3569222923ff0305d9030dbf" kindref="member">isGradPm</ref>);<sp/></highlight><highlight class="comment">//<sp/>propagate,<sp/>apply<sp/>measured<sp/>intensity<sp/>and<sp/>unpropagate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//normalize<sp/>inverse<sp/>cufft<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*current_exit_wave<sp/>/=<sp/>float(probeshape.x<sp/>*<sp/>probeshape.y);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k_RAAR_wavefront_update&lt;&lt;&lt;blk,<sp/>thr&gt;&gt;&gt;(*current_object,<sp/>*current_probe,<sp/><sp/><sp/>*current_obj_acc,<sp/>*current_obj_div,<sp/><sp/>*current_exit_wave,<sp/>*current_measurement,<sp/>ptr_roi,<sp/>raar.<ref refid="structRAAR_1ae9ee13d51aaa5be9847c90098b28d07f" kindref="member">beta</ref>);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssc_debug(</highlight><highlight class="stringliteral">&quot;Syncing<sp/>OBJ&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objvelocity.SetGPUToZero();</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a506d977d84492238546e64d7b2f38f01" kindref="member">object</ref>-&gt;WeightedLerpSync(*(raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a4d304204018e1fe000740b0468d74566" kindref="member">object_acc</ref>),<sp/>*(raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1ade9e24797a0b051d27502f3148230018" kindref="member">object_div</ref>),<sp/>raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a28af23f00cd500b58e7145aeb57a16e2" kindref="member">objstep</ref>,<sp/>raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a8dfd13763eaa2664e0f711bdf78435c2" kindref="member">objmomentum</ref>,<sp/>objvelocity,<sp/>raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a0432e54095f9ef861d69ef7db2020bcc" kindref="member">objreg</ref>);<sp/></highlight><highlight class="comment">//<sp/>exchanging<sp/>information<sp/>here?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssc_debug(</highlight><highlight class="stringliteral">&quot;Applying<sp/>probe&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>probevelocity.SetGPUToZero();</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//for(int<sp/>itt=0;<sp/>itt&lt;3;<sp/>++itt)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="raar_8cu_1a6f84a4b01057c3125c53c508e08bdd6a" kindref="member">RAARApplyProbeUpdate</ref>(raar,<sp/>probevelocity,</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1ab26d95672cf1bdb420e2edb86df59565" kindref="member">probestep</ref>,<sp/>raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a36890b4c11b6e9ea9d0013acfa8015de" kindref="member">probemomentum</ref>,<sp/>raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a84777c02e5be6e5a84906bf7ba0da62a" kindref="member">probereg</ref>);<sp/></highlight><highlight class="comment">//<sp/>updates<sp/>in<sp/>real<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="raar_8cu_1a3ef2e472fc5918a16aaffc614254bd71" kindref="member">RAARApplyObjectUpdate</ref>(raar,<sp/>objvelocity,</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a28af23f00cd500b58e7145aeb57a16e2" kindref="member">objstep</ref>,<sp/>raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a8dfd13763eaa2664e0f711bdf78435c2" kindref="member">objmomentum</ref>,<sp/>raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a0432e54095f9ef861d69ef7db2020bcc" kindref="member">objreg</ref>);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1abfd36af46d12deaded7d6ebb8e122242" kindref="member">cpurfact</ref>[iter]<sp/>=<sp/>sqrtf(raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a7927b2f881d02a9170c59b1e387050ed" kindref="member">rfactors</ref>-&gt;SumCPU());<sp/></highlight><highlight class="comment">//<sp/>calculating<sp/>error?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter<sp/>%<sp/>10<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssc_info(format(</highlight><highlight class="stringliteral">&quot;iter<sp/>{}/{}<sp/>error:<sp/>{}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter,<sp/>iterations,<sp/>raar.<ref refid="structRAAR_1a880063ae295e76c0944db229b10663d6" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1abfd36af46d12deaded7d6ebb8e122242" kindref="member">cpurfact</ref>[iter]));</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssc_event_stop();<sp/></highlight><highlight class="comment">//RAAR<sp/>iter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>time1<sp/>=<sp/>ssc_time();</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>ssc_info(format(</highlight><highlight class="stringliteral">&quot;End<sp/>RAAR<sp/>iteration:<sp/>{}<sp/>ms&quot;</highlight><highlight class="normal">,<sp/>ssc_diff_time(time0,<sp/>time1)));</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>ssc_event_stop();<sp/></highlight><highlight class="comment">//<sp/>RAAR<sp/>Run</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal">}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/raar.cu"/>
  </compounddef>
</doxygen>
