<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="poscorrection_8cu" kind="file" language="C++">
    <compoundname>poscorrection.cu</compoundname>
    <includes local="no">cstddef</includes>
    <includes refid="ptycho_8hpp" local="yes">ptycho.hpp</includes>
    <includes local="no">common/logger.hpp</includes>
    <includes local="no">common/types.hpp</includes>
    <includes local="no">common/utils.hpp</includes>
    <incdepgraph>
      <node id="5">
        <label>common/complex.hpp</label>
      </node>
      <node id="1">
        <label>/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/poscorrection.cu</label>
        <link refid="poscorrection_8cu"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>cufft.h</label>
      </node>
      <node id="7">
        <label>propagator.hpp</label>
        <link refid="propagator_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
      <node id="11">
        <label>common/utils.hpp</label>
      </node>
      <node id="10">
        <label>common/logger.hpp</label>
      </node>
      <node id="3">
        <label>ptycho.hpp</label>
        <link refid="ptycho_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>cstddef</label>
      </node>
      <node id="9">
        <label>types.hpp</label>
      </node>
      <node id="6">
        <label>common/types.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="structPosCorrection" prot="public">PosCorrection</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="poscorrection_8cu_1a6d57534aa87af8f7b632aa8f9a698c27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__global__ void</type>
        <definition>__global__ void KSideExitwave</definition>
        <argsstring>(GArray&lt; complex &gt; exitwave, const GArray&lt; complex &gt; probe, const GArray&lt; complex &gt; object, const GArray&lt; ROI &gt; rois, int offx, int offy)</argsstring>
        <name>KSideExitwave</name>
        <param>
          <type>GArray&lt; complex &gt;</type>
          <declname>exitwave</declname>
        </param>
        <param>
          <type>const GArray&lt; complex &gt;</type>
          <declname>probe</declname>
        </param>
        <param>
          <type>const GArray&lt; complex &gt;</type>
          <declname>object</declname>
        </param>
        <param>
          <type>const GArray&lt; <ref refid="structROI" kindref="compound">ROI</ref> &gt;</type>
          <declname>rois</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/poscorrection.cu" line="10" column="17" bodyfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/poscorrection.cu" bodystart="10" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="poscorrection_8cu_1a1d2a190e28333ef598c606dbd42bf472" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__global__ void</type>
        <definition>__global__ void KComputeError</definition>
        <argsstring>(float *rfactors, const GArray&lt; complex &gt; exitwave, const GArray&lt; float &gt; difpads, const GArray&lt; float &gt; sigmask, const float *background, size_t nummodes)</argsstring>
        <name>KComputeError</name>
        <param>
          <type>float *</type>
          <declname>rfactors</declname>
        </param>
        <param>
          <type>const GArray&lt; complex &gt;</type>
          <declname>exitwave</declname>
        </param>
        <param>
          <type>const GArray&lt; float &gt;</type>
          <declname>difpads</declname>
        </param>
        <param>
          <type>const GArray&lt; float &gt;</type>
          <declname>sigmask</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>background</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nummodes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/poscorrection.cu" line="30" column="17" bodyfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/poscorrection.cu" bodystart="30" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="poscorrection_8cu_1a80b8c07259c49828d3ca4c6575523606" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structPosCorrection" kindref="compound">PosCorrection</ref> *</type>
        <definition>PosCorrection* CreatePosCorrection</definition>
        <argsstring>(float *difpads, const dim3 &amp;difshape, complex *probe, const dim3 &amp;probeshape, complex *object, const dim3 &amp;objshape, ROI *rois, int numrois, int batchsize, float *rfact, const std::vector&lt; int &gt; &amp;gpus, float *objsupp, float *probesupp, int numobjsupp, float *sigmask, int geometricsteps, float *background, float probef1, float step_obj, float step_probe, float reg_obj, float reg_probe)</argsstring>
        <name>CreatePosCorrection</name>
        <param>
          <type>float *</type>
          <declname>difpads</declname>
        </param>
        <param>
          <type>const dim3 &amp;</type>
          <declname>difshape</declname>
        </param>
        <param>
          <type>complex *</type>
          <declname>probe</declname>
        </param>
        <param>
          <type>const dim3 &amp;</type>
          <declname>probeshape</declname>
        </param>
        <param>
          <type>complex *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>const dim3 &amp;</type>
          <declname>objshape</declname>
        </param>
        <param>
          <type><ref refid="structROI" kindref="compound">ROI</ref> *</type>
          <declname>rois</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numrois</declname>
        </param>
        <param>
          <type>int</type>
          <declname>batchsize</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>rfact</declname>
        </param>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>gpus</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>objsupp</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>probesupp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numobjsupp</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>sigmask</declname>
        </param>
        <param>
          <type>int</type>
          <declname>geometricsteps</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>background</declname>
        </param>
        <param>
          <type>float</type>
          <declname>probef1</declname>
        </param>
        <param>
          <type>float</type>
          <declname>step_obj</declname>
        </param>
        <param>
          <type>float</type>
          <declname>step_probe</declname>
        </param>
        <param>
          <type>float</type>
          <declname>reg_obj</declname>
        </param>
        <param>
          <type>float</type>
          <declname>reg_probe</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/poscorrection.cu" line="79" column="15" bodyfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/poscorrection.cu" bodystart="79" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="poscorrection_8cu_1a04b0935ad377b2584ae1bea34152a11c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PosCorrectionApplyProbeUpdate</definition>
        <argsstring>(cImage &amp;velocity, float stepsize, float momentum, float epsilon)</argsstring>
        <name>PosCorrectionApplyProbeUpdate</name>
        <param>
          <type>cImage &amp;</type>
          <declname>velocity</declname>
        </param>
        <param>
          <type>float</type>
          <declname>stepsize</declname>
        </param>
        <param>
          <type>float</type>
          <declname>momentum</declname>
        </param>
        <param>
          <type>float</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Positions are updated along with the probe. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/poscorrection.cu" line="99" column="6" declfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/poscorrection.cu" declline="99" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="poscorrection_8cu_1a02a39371a68aa76181b9f8f13af84003" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PosCorrectionProjectProbe</definition>
        <argsstring>(PosCorrection &amp;poscorr, int section)</argsstring>
        <name>PosCorrectionProjectProbe</name>
        <param>
          <type><ref refid="structPosCorrection" kindref="compound">PosCorrection</ref> &amp;</type>
          <declname>poscorr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>section</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/poscorrection.cu" line="102" column="6" bodyfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/poscorrection.cu" bodystart="102" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="poscorrection_8cu_1a06fd91abbe4422f224bc6d23292a0962" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DestroyPosCorrection</definition>
        <argsstring>(PosCorrection *&amp;poscorr)</argsstring>
        <name>DestroyPosCorrection</name>
        <param>
          <type><ref refid="structPosCorrection" kindref="compound">PosCorrection</ref> *&amp;</type>
          <declname>poscorr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/poscorrection.cu" line="106" column="6" bodyfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/poscorrection.cu" bodystart="106" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="poscorrection_8cu_1a8b64d4df680b8175dc949ae1fc2234e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PosCorrectionApplyProbeUpdate</definition>
        <argsstring>(PosCorrection &amp;poscorr, cImage &amp;velocity, float stepsize, float momentum, float epsilon)</argsstring>
        <name>PosCorrectionApplyProbeUpdate</name>
        <param>
          <type><ref refid="structPosCorrection" kindref="compound">PosCorrection</ref> &amp;</type>
          <declname>poscorr</declname>
        </param>
        <param>
          <type>cImage &amp;</type>
          <declname>velocity</declname>
        </param>
        <param>
          <type>float</type>
          <declname>stepsize</declname>
        </param>
        <param>
          <type>float</type>
          <declname>momentum</declname>
        </param>
        <param>
          <type>float</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/poscorrection.cu" line="120" column="6" bodyfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/poscorrection.cu" bodystart="120" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="poscorrection_8cu_1ad13bbaaabe8e6ee3c38bcd49436443f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PosCorrectionRun</definition>
        <argsstring>(PosCorrection &amp;poscorr, int iterations)</argsstring>
        <name>PosCorrectionRun</name>
        <param>
          <type><ref refid="structPosCorrection" kindref="compound">PosCorrection</ref> &amp;</type>
          <declname>poscorr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iterations</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/poscorrection.cu" line="203" column="6" bodyfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/poscorrection.cu" bodystart="203" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="poscorrection_8cu_1a20eb54ed5163a7a128b57a89d757c397" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void poscorrcall</definition>
        <argsstring>(void *cpuobj, void *cpuprobe, void *cpudif, int psizex, int osizex, int osizey, int dsizex, void *cpurois, int numrois, int bsize, int numiter, int ngpus, int *cpugpus, float *rfactors, float objbeta, float probebeta, int psizez, float *objsupport, float *probesupport, int numobjsupport, float *sigmask, int geometricsteps, float step_obj, float step_probe, float reg_obj, float reg_probe, float *background, float probef1)</argsstring>
        <name>poscorrcall</name>
        <param>
          <type>void *</type>
          <declname>cpuobj</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>cpuprobe</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>cpudif</declname>
        </param>
        <param>
          <type>int</type>
          <declname>psizex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>osizex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>osizey</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dsizex</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>cpurois</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numrois</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bsize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numiter</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ngpus</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>cpugpus</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>rfactors</declname>
        </param>
        <param>
          <type>float</type>
          <declname>objbeta</declname>
        </param>
        <param>
          <type>float</type>
          <declname>probebeta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>psizez</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>objsupport</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>probesupport</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numobjsupport</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>sigmask</declname>
        </param>
        <param>
          <type>int</type>
          <declname>geometricsteps</declname>
        </param>
        <param>
          <type>float</type>
          <declname>step_obj</declname>
        </param>
        <param>
          <type>float</type>
          <declname>step_probe</declname>
        </param>
        <param>
          <type>float</type>
          <declname>reg_obj</declname>
        </param>
        <param>
          <type>float</type>
          <declname>reg_probe</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>background</declname>
        </param>
        <param>
          <type>float</type>
          <declname>probef1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/poscorrection.cu" line="319" column="6" bodyfile="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/poscorrection.cu" bodystart="319" bodyend="344"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;cstddef&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ptycho_8hpp" kindref="compound">ptycho.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;common/logger.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;common/types.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;common/utils.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal">__global__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="poscorrection_8cu_1a6d57534aa87af8f7b632aa8f9a698c27" kindref="member">KSideExitwave</ref>(GArray&lt;complex&gt;<sp/>exitwave,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GArray&lt;complex&gt;<sp/>probe,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GArray&lt;complex&gt;<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GArray&lt;ROI&gt;<sp/>rois,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offy)</highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>blockIdx.x*blockDim.x<sp/>+<sp/>threadIdx.x;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(idx<sp/>&gt;=<sp/>probe.shape.x)</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idy<sp/>=<sp/>blockIdx.y*blockDim.y<sp/>+<sp/>threadIdx.y;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idz<sp/>=<sp/>blockIdx.z;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>objposx<sp/>=<sp/>idx<sp/>+<sp/>(int)rois(idz,0,0).x<sp/>+<sp/>offx;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>objposy<sp/>=<sp/>idy<sp/>+<sp/>(int)rois(idz,0,0).y<sp/>+<sp/>offy;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>complex&amp;<sp/>obj<sp/>=<sp/>object(objposy,<sp/>objposx);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>m=0;<sp/>m&lt;probe.shape.z;<sp/>m++)<sp/></highlight><highlight class="comment">//<sp/>for<sp/>each<sp/>incoherent<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exitwave(m<sp/>+<sp/>probe.shape.z*blockIdx.z,idy,idx)<sp/>=<sp/>obj<sp/>*<sp/>probe(m,idy,idx);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal">__global__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="poscorrection_8cu_1a1d2a190e28333ef598c606dbd42bf472" kindref="member">KComputeError</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>rfactors,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GArray&lt;complex&gt;<sp/>exitwave,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GArray&lt;float&gt;<sp/>difpads,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GArray&lt;float&gt;<sp/>sigmask,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>background,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nummodes)</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>__shared__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sh_rfactor[64];</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(threadIdx.x&lt;64)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sh_rfactor[threadIdx.x]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>__syncthreads();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>threadIdx.x<sp/>+<sp/>blockIdx.x<sp/>*<sp/>blockDim.x;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idy<sp/>=<sp/>blockIdx.y;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(idx<sp/>&gt;=<sp/>difpads.shape.x)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bApplyBkg<sp/>=<sp/>background<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>difpad<sp/>=<sp/>difpads(blockIdx.z,<sp/>idy,<sp/>idx);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(difpad<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>wabs2<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bApplyBkg<sp/>)<sp/>wabs2<sp/>=<sp/><ref refid="ptycho_8hpp_1a21d9c6942860f777da21bac01cb5cd1c" kindref="member">sq</ref>(<sp/>background[idy*difpads.shape.x+idx]<sp/>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m=0;<sp/>m&lt;nummodes;<sp/>m++)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wabs2<sp/>+=<sp/>exitwave(blockIdx.z*nummodes<sp/>+<sp/>m,<sp/>idy,<sp/>idx).abs2();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atomicAdd(sh_rfactor<sp/>+<sp/>threadIdx.x%64,<sp/>sigmask(idy,idx)*<ref refid="ptycho_8hpp_1a21d9c6942860f777da21bac01cb5cd1c" kindref="member">sq</ref>(sqrtf(difpad)-sqrtf(wabs2)));</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>__syncthreads();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>Reduction::KSharedReduce(sh_rfactor,64);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(threadIdx.x==0)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atomicAdd(rfactors<sp/>+<sp/>blockIdx.z,<sp/>sh_rfactor[0]);</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="structPosCorrection" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structPosCorrection" kindref="compound">PosCorrection</ref></highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>rMImage*<sp/><ref refid="structPosCorrection_1ae58ec8cf60cc084f449a7318af2c92cd" kindref="member">errorcounter</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structPOptAlgorithm" kindref="compound">POptAlgorithm</ref>*<sp/><ref refid="structPosCorrection_1a49df06a34af1a452b67681555b511ec2" kindref="member">ptycho</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structPosCorrection_1ad6a0258542cc0177ce8e8f082618177c" kindref="member">isGradPm</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal">};</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><ref refid="structPosCorrection" kindref="compound">PosCorrection</ref>*<sp/><ref refid="poscorrection_8cu_1a80b8c07259c49828d3ca4c6575523606" kindref="member">CreatePosCorrection</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>difpads,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dim3&amp;<sp/>difshape,<sp/>complex*<sp/>probe,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dim3&amp;<sp/>probeshape,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>complex*<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dim3&amp;<sp/>objshape,<sp/><ref refid="structROI" kindref="compound">ROI</ref>*<sp/>rois,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numrois,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>batchsize,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>rfact,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;&amp;<sp/>gpus,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>objsupp,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>probesupp,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numobjsupp,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>sigmask,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>geometricsteps,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>background,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>probef1,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>step_obj,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>step_probe,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>reg_obj,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>reg_probe)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structPosCorrection" kindref="compound">PosCorrection</ref>*<sp/>poscorr<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structPosCorrection" kindref="compound">PosCorrection</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>poscorr-&gt;<ref refid="structPosCorrection_1ae58ec8cf60cc084f449a7318af2c92cd" kindref="member">errorcounter</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>rMImage(5,<sp/>1,<sp/>batchsize,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>gpus);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>poscorr-&gt;<ref refid="structPosCorrection_1a49df06a34af1a452b67681555b511ec2" kindref="member">ptycho</ref><sp/>=</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ptycho_8cu_1ac6d77be77215d1df299307ef6a2175dc" kindref="member">CreatePOptAlgorithm</ref>(difpads,<sp/>difshape,<sp/>probe,<sp/>probeshape,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>objshape,<sp/>rois,<sp/>numrois,<sp/>batchsize,<sp/>rfact,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gpus,<sp/>objsupp,<sp/>probesupp,<sp/>numobjsupp,<sp/>sigmask,<sp/>geometricsteps,<sp/>background,<sp/>probef1,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>step_obj,<sp/>step_probe,<sp/>reg_obj,<sp/>reg_probe);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>poscorr;</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="poscorrection_8cu_1a04b0935ad377b2584ae1bea34152a11c" kindref="member">PosCorrectionApplyProbeUpdate</ref>(cImage&amp;<sp/>velocity,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>stepsize,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>momentum,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>epsilon);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="poscorrection_8cu_1a02a39371a68aa76181b9f8f13af84003" kindref="member">PosCorrectionProjectProbe</ref>(<ref refid="structPosCorrection" kindref="compound">PosCorrection</ref>&amp;<sp/>poscorr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>section)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ptycho_8cu_1a298859823914cec4625ac4a405426582" kindref="member">ProjectPhiToProbe</ref>(*poscorr.<ref refid="structPosCorrection_1a49df06a34af1a452b67681555b511ec2" kindref="member">ptycho</ref>,<sp/>section,<sp/>*poscorr.<ref refid="structPosCorrection_1a49df06a34af1a452b67681555b511ec2" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a9ebbe9246bb2540b461b66067396ac0e" kindref="member">exitwave</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>poscorr.<ref refid="structPosCorrection_1ad6a0258542cc0177ce8e8f082618177c" kindref="member">isGradPm</ref>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="poscorrection_8cu_1a06fd91abbe4422f224bc6d23292a0962" kindref="member">DestroyPosCorrection</ref>(<ref refid="structPosCorrection" kindref="compound">PosCorrection</ref>*&amp;<sp/>poscorr)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>poscorr-&gt;<ref refid="structPosCorrection_1ae58ec8cf60cc084f449a7318af2c92cd" kindref="member">errorcounter</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_batches<sp/>=<sp/>poscorr-&gt;<ref refid="structPosCorrection_1a49df06a34af1a452b67681555b511ec2" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a96bb15bd81f718c72d585c8ed611eab9" kindref="member">rois</ref>.size();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>0;<sp/>d<sp/>&lt;<sp/>num_batches;<sp/>d++)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>g<sp/>=<sp/>0;<sp/>g&lt;poscorr-&gt;<ref refid="structPosCorrection_1a49df06a34af1a452b67681555b511ec2" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1abec0db9e1f00d5267327d02da5161d19" kindref="member">gpus</ref>.size();<sp/>g++)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>z<sp/>=<sp/>0;<sp/>z<sp/>&lt;<sp/>poscorr-&gt;<ref refid="structPosCorrection_1a49df06a34af1a452b67681555b511ec2" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a96bb15bd81f718c72d585c8ed611eab9" kindref="member">rois</ref>[d][0][g].sizez;<sp/>z++)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>int(poscorr-&gt;<ref refid="structPosCorrection_1a49df06a34af1a452b67681555b511ec2" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a96bb15bd81f718c72d585c8ed611eab9" kindref="member">rois</ref>[d][0][g].cpuptr[z].I0+0.1f);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>poscorr-&gt;<ref refid="structPosCorrection_1a49df06a34af1a452b67681555b511ec2" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a756b6b85c939871d321128435a279dfb" kindref="member">cpurois</ref>[index].<ref refid="structROI_1aeeb35d1907fcdd6019624d91a943ea8b" kindref="member">x</ref><sp/>=<sp/>poscorr-&gt;<ref refid="structPosCorrection_1a49df06a34af1a452b67681555b511ec2" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a96bb15bd81f718c72d585c8ed611eab9" kindref="member">rois</ref>[d][0][g].cpuptr[z].x;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>poscorr-&gt;<ref refid="structPosCorrection_1a49df06a34af1a452b67681555b511ec2" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a756b6b85c939871d321128435a279dfb" kindref="member">cpurois</ref>[index].<ref refid="structROI_1aa1c5dc105fd5f5017fe5b4e1eb471f6a" kindref="member">y</ref><sp/>=<sp/>poscorr-&gt;<ref refid="structPosCorrection_1a49df06a34af1a452b67681555b511ec2" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a96bb15bd81f718c72d585c8ed611eab9" kindref="member">rois</ref>[d][0][g].cpuptr[z].y;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ptycho_8cu_1a5b112da7aae5c2cf748894fffcca3056" kindref="member">DestroyPOptAlgorithm</ref>(poscorr-&gt;<ref refid="structPosCorrection_1a49df06a34af1a452b67681555b511ec2" kindref="member">ptycho</ref>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>poscorr<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="poscorrection_8cu_1a04b0935ad377b2584ae1bea34152a11c" kindref="member">PosCorrectionApplyProbeUpdate</ref>(<ref refid="structPosCorrection" kindref="compound">PosCorrection</ref>&amp;<sp/>poscorr,<sp/>cImage&amp;<sp/>velocity,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>stepsize,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>momentum,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>epsilon)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structPOptAlgorithm" kindref="compound">POptAlgorithm</ref>&amp;<sp/>ptycho<sp/>=<sp/>*poscorr.<ref refid="structPosCorrection_1a49df06a34af1a452b67681555b511ec2" kindref="member">ptycho</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ptycho_8cu_1a3760b1da2405731ddcbe4728535475fc" kindref="member">ApplyProbeUpdate</ref>(ptycho,<sp/>velocity,<sp/>stepsize,<sp/>momentum,<sp/>epsilon);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>offx[]<sp/>=<sp/>{0,1,-1,0,0};</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>offy[]<sp/>=<sp/>{0,0,0,1,-1};</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bApplyBkg<sp/>=<sp/>ptycho.<ref refid="structPOptAlgorithm_1a89393de4a5e66a2339b813512828c6a0" kindref="member">background</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>batchsize<sp/>=<sp/>ptycho.<ref refid="structPOptAlgorithm_1a96bb15bd81f718c72d585c8ed611eab9" kindref="member">rois</ref>[0]-&gt;arrays[0]-&gt;sizez;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dim3<sp/>difpadshape<sp/>=<sp/>ptycho.<ref refid="structPOptAlgorithm_1a92c4b4ea6b38caeb8e254aa30d48317b" kindref="member">difpadshape</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_batches<sp/>=<sp/><ref refid="ptycho_8hpp_1a97ec95d785a25d7a7ad2bac4ed1ff5ba" kindref="member">ptycho_num_batches</ref>(ptycho);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>0;<sp/>d&lt;num_batches;<sp/>d++)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>difpad_batch_zsize<sp/>=<sp/><ref refid="ptycho_8hpp_1a7c407959761feaf187a9876422f155a2" kindref="member">ptycho_cur_batch_zsize</ref>(ptycho,<sp/>d);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>difpad_idx<sp/>=<sp/>d<sp/>*<sp/><ref refid="ptycho_8hpp_1a29e6ab2719a0f15f98956fbf7e113115" kindref="member">ptycho_batch_size</ref>(ptycho);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>improve<sp/>so<sp/>we<sp/>can<sp/>avoid<sp/>reallocating<sp/>arrays<sp/>every<sp/>iteration,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>need<sp/>a<sp/>speedup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rMImage<sp/>cur_difpad(</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptycho.<ref refid="structPOptAlgorithm_1a8ec4655eee89ffd8bf45f8779d6ba098" kindref="member">cpudifpads</ref><sp/>+<sp/>difpad_idx<sp/>*<sp/>difpadshape.x<sp/>*<sp/>difpadshape.y,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>difpadshape.x,<sp/>difpadshape.y,<sp/>difpad_batch_zsize,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>ptycho.<ref refid="structPOptAlgorithm_1abec0db9e1f00d5267327d02da5161d19" kindref="member">gpus</ref>,<sp/>MemoryType::EAllocGPU);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>poscorr.<ref refid="structPosCorrection_1ae58ec8cf60cc084f449a7318af2c92cd" kindref="member">errorcounter</ref>-&gt;SetGPUToZero();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptycho.<ref refid="structPOptAlgorithm_1a96bb15bd81f718c72d585c8ed611eab9" kindref="member">rois</ref>[d]-&gt;LoadFromGPU();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ngpus<sp/>=<sp/><ref refid="ptycho_8hpp_1ad52670044f5598683c76426564e3e8de" kindref="member">ptycho_num_gpus</ref>(ptycho);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k&lt;5;<sp/>k++)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>g<sp/>=<sp/>0;<sp/>g<sp/>&lt;<sp/>ngpus;<sp/>g++)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>difpadsizez<sp/>=<sp/>ptycho.<ref refid="structPOptAlgorithm_1a96bb15bd81f718c72d585c8ed611eab9" kindref="member">rois</ref>[d][0][g].sizez;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(difpadsizez<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetDevice(ptycho.<ref refid="structPOptAlgorithm_1abec0db9e1f00d5267327d02da5161d19" kindref="member">gpus</ref>,<sp/>g);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dim3<sp/>blk<sp/>=<sp/>ptycho.<ref refid="structPOptAlgorithm_1a9ebbe9246bb2540b461b66067396ac0e" kindref="member">exitwave</ref>-&gt;ShapeBlock();<sp/>blk.z<sp/>=<sp/>difpadsizez;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dim3<sp/>thr<sp/>=<sp/>ptycho.<ref refid="structPOptAlgorithm_1a9ebbe9246bb2540b461b66067396ac0e" kindref="member">exitwave</ref>-&gt;ShapeThread();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Image2D&lt;ROI&gt;&amp;<sp/>ptr_roi<sp/>=<sp/>*ptycho.<ref refid="structPOptAlgorithm_1a96bb15bd81f718c72d585c8ed611eab9" kindref="member">rois</ref>[d]-&gt;arrays[g];</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KSideExitwave&lt;&lt;&lt;blk,thr&gt;&gt;&gt;(*ptycho.<ref refid="structPOptAlgorithm_1a9ebbe9246bb2540b461b66067396ac0e" kindref="member">exitwave</ref>-&gt;arrays[g],</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ptycho.<ref refid="structPOptAlgorithm_1aa0bb2bf38b8e6e0126ff0e21fb7203d6" kindref="member">probe</ref>-&gt;arrays[g],</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ptycho.<ref refid="structPOptAlgorithm_1a506d977d84492238546e64d7b2f38f01" kindref="member">object</ref>-&gt;arrays[g],</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr_roi,<sp/>offx[k],<sp/>offy[k]);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptycho.<ref refid="structPOptAlgorithm_1ad2cd46aefc388e690475a466352dd00f" kindref="member">propagator</ref>[g]-&gt;<ref refid="classPropagator_1ac8149f9492abab7ae463d1380f8369fe" kindref="member">Propagate</ref>(ptycho.<ref refid="structPOptAlgorithm_1a9ebbe9246bb2540b461b66067396ac0e" kindref="member">exitwave</ref>-&gt;arrays[g]-&gt;gpuptr,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptycho.<ref refid="structPOptAlgorithm_1a9ebbe9246bb2540b461b66067396ac0e" kindref="member">exitwave</ref>-&gt;arrays[g]-&gt;gpuptr,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptycho.<ref refid="structPOptAlgorithm_1a9ebbe9246bb2540b461b66067396ac0e" kindref="member">exitwave</ref>-&gt;arrays[g]-&gt;Shape(),<sp/>1);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KComputeError&lt;&lt;&lt;blk,thr&gt;&gt;&gt;(</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>poscorr.<ref refid="structPosCorrection_1ae58ec8cf60cc084f449a7318af2c92cd" kindref="member">errorcounter</ref>-&gt;arrays[g]-&gt;gpuptr<sp/>+<sp/>batchsize*k,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ptycho.<ref refid="structPOptAlgorithm_1a9ebbe9246bb2540b461b66067396ac0e" kindref="member">exitwave</ref>-&gt;arrays[g],<sp/>*cur_difpad.arrays[g],</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ptycho.<ref refid="structPOptAlgorithm_1a968ce12fa5071c8ac0480f3a2f30e4d8" kindref="member">sigmask</ref>-&gt;arrays[g],</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bApplyBkg<sp/>?<sp/>ptycho.<ref refid="structPOptAlgorithm_1a89393de4a5e66a2339b813512828c6a0" kindref="member">background</ref>-&gt;arrays[g]-&gt;gpuptr<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptycho.<ref refid="structPOptAlgorithm_1aa0bb2bf38b8e6e0126ff0e21fb7203d6" kindref="member">probe</ref>-&gt;sizez);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>poscorr.<ref refid="structPosCorrection_1ae58ec8cf60cc084f449a7318af2c92cd" kindref="member">errorcounter</ref>-&gt;LoadFromGPU();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>poscorr.<ref refid="structPosCorrection_1ae58ec8cf60cc084f449a7318af2c92cd" kindref="member">errorcounter</ref>-&gt;SyncDevices();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>g<sp/>=<sp/>0;<sp/>g&lt;ptycho.<ref refid="structPOptAlgorithm_1abec0db9e1f00d5267327d02da5161d19" kindref="member">gpus</ref>.size();<sp/>g++)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>batch_size<sp/>=<sp/><ref refid="ptycho_8hpp_1a1911ebcdd9be52014b087a48f65625fe" kindref="member">ptycho_cur_batch_gpu_zsize</ref>(ptycho,<sp/>d,<sp/>g);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>z<sp/>=<sp/>0;<sp/>z<sp/>&lt;<sp/>batch_size;<sp/>z++)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>error<sp/>=<sp/>poscorr.<ref refid="structPosCorrection_1ae58ec8cf60cc084f449a7318af2c92cd" kindref="member">errorcounter</ref>-&gt;arrays[g]-&gt;cpuptr<sp/>+<sp/>z;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>minerror<sp/>=<sp/>1E35f;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minidx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k&lt;5;<sp/>k++)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(error[batchsize*k]<sp/>&lt;<sp/>minerror)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minerror<sp/>=<sp/>error[batchsize*k];</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minidx<sp/>=<sp/>k;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptycho.<ref refid="structPOptAlgorithm_1a96bb15bd81f718c72d585c8ed611eab9" kindref="member">rois</ref>[d][0][g].cpuptr[z].x<sp/>=<sp/>fminf(fmaxf(ptycho.<ref refid="structPOptAlgorithm_1a96bb15bd81f718c72d585c8ed611eab9" kindref="member">rois</ref>[d][0][g].cpuptr[z].x+offx[minidx],1.1f),</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptycho.<ref refid="structPOptAlgorithm_1a506d977d84492238546e64d7b2f38f01" kindref="member">object</ref>-&gt;sizex<sp/>-<sp/>ptycho.<ref refid="structPOptAlgorithm_1aa0bb2bf38b8e6e0126ff0e21fb7203d6" kindref="member">probe</ref>-&gt;sizex-3);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptycho.<ref refid="structPOptAlgorithm_1a96bb15bd81f718c72d585c8ed611eab9" kindref="member">rois</ref>[d][0][g].cpuptr[z].y<sp/>=<sp/>fminf(fmaxf(ptycho.<ref refid="structPOptAlgorithm_1a96bb15bd81f718c72d585c8ed611eab9" kindref="member">rois</ref>[d][0][g].cpuptr[z].y+offy[minidx],1.1f),</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptycho.<ref refid="structPOptAlgorithm_1a506d977d84492238546e64d7b2f38f01" kindref="member">object</ref>-&gt;sizey<sp/>-<sp/>ptycho.<ref refid="structPOptAlgorithm_1aa0bb2bf38b8e6e0126ff0e21fb7203d6" kindref="member">probe</ref>-&gt;sizey-3);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptycho.<ref refid="structPOptAlgorithm_1a96bb15bd81f718c72d585c8ed611eab9" kindref="member">rois</ref>[d]-&gt;LoadToGPU();</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>SyncDevices(ptycho.<ref refid="structPOptAlgorithm_1abec0db9e1f00d5267327d02da5161d19" kindref="member">gpus</ref>);</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="poscorrection_8cu_1ad13bbaaabe8e6ee3c38bcd49436443f2" kindref="member">PosCorrectionRun</ref>(<ref refid="structPosCorrection" kindref="compound">PosCorrection</ref>&amp;<sp/>poscorr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iterations)<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>ssc_debug(</highlight><highlight class="stringliteral">&quot;Starting<sp/>PosCorrectionRun.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>ssc_event_start(</highlight><highlight class="stringliteral">&quot;Position<sp/>Correction<sp/>Run&quot;</highlight><highlight class="normal">,<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssc_param_int(</highlight><highlight class="stringliteral">&quot;iter&quot;</highlight><highlight class="normal">,<sp/>iterations),</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssc_param_int(</highlight><highlight class="stringliteral">&quot;difpadshape.x&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)poscorr.<ref refid="structPosCorrection_1a49df06a34af1a452b67681555b511ec2" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a92c4b4ea6b38caeb8e254aa30d48317b" kindref="member">difpadshape</ref>.x),</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssc_param_int(</highlight><highlight class="stringliteral">&quot;difpadshape.y&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)poscorr.<ref refid="structPosCorrection_1a49df06a34af1a452b67681555b511ec2" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a92c4b4ea6b38caeb8e254aa30d48317b" kindref="member">difpadshape</ref>.y),</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssc_param_int(</highlight><highlight class="stringliteral">&quot;difpadshape.z&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)poscorr.<ref refid="structPosCorrection_1a49df06a34af1a452b67681555b511ec2" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a92c4b4ea6b38caeb8e254aa30d48317b" kindref="member">difpadshape</ref>.z)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><ref refid="structPOptAlgorithm" kindref="compound">POptAlgorithm</ref>&amp;<sp/>ptycho<sp/>=<sp/>*poscorr.<ref refid="structPosCorrection_1a49df06a34af1a452b67681555b511ec2" kindref="member">ptycho</ref>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>time0<sp/>=<sp/>ssc_time();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>ptycho.object-&gt;Set(0);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>cImage<sp/>objvelocity(ptycho.object-&gt;Shape());</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>cImage<sp/>probevelocity(ptycho.probe-&gt;Shape());</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>objvelocity.SetGPUToZero();</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>probevelocity.SetGPUToZero();</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dim3<sp/>difpadshape<sp/>=<sp/>ptycho.difpadshape;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iter<sp/>=<sp/>0;<sp/>iter<sp/>&lt;<sp/>iterations;<sp/>iter++)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>ssc_debug(format(</highlight><highlight class="stringliteral">&quot;Start<sp/>PosCorr<sp/>iteration:<sp/>{}&quot;</highlight><highlight class="normal">,<sp/>iter));</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>ssc_event_start(</highlight><highlight class="stringliteral">&quot;PosCorr<sp/>iter&quot;</highlight><highlight class="normal">,<sp/>{<sp/>ssc_param_int(</highlight><highlight class="stringliteral">&quot;iter&quot;</highlight><highlight class="normal">,<sp/>iter)<sp/>});</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::cout<sp/>&lt;&lt;<sp/>iter<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bIterProbe<sp/>=<sp/>(ptycho.probemomentum<sp/>&gt;=<sp/>0);<sp/><sp/></highlight><highlight class="comment">//<sp/>&amp;<sp/>(iter<sp/>&gt;<sp/>iterations/20);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>ptycho.rfactors-&gt;SetGPUToZero();</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>ptycho.object_acc-&gt;SetGPUToZero();</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>ptycho.object_div-&gt;SetGPUToZero();</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>ptycho.probe_acc-&gt;SetGPUToZero();</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>ptycho.probe_div-&gt;SetGPUToZero();</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter<sp/>&lt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>objvelocity.SetGPUToZero();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>probevelocity.SetGPUToZero();</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_batches<sp/>=<sp/>ptycho.rois.size();</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>0;<sp/>d<sp/>&lt;<sp/>num_batches;<sp/>d++)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>difpad_batch_zsize<sp/>=<sp/>ptycho.rois[d]-&gt;sizez;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>difpad_idx<sp/>=<sp/>d<sp/>*<sp/>ptycho.multibatchsize;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>improve<sp/>so<sp/>we<sp/>can<sp/>avoid<sp/>reallocating<sp/>arrays<sp/>every<sp/>iteration,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>need<sp/>a<sp/>speedup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rMImage<sp/>cur_difpad(</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptycho.cpudifpads<sp/>+<sp/>difpad_idx<sp/>*<sp/>difpadshape.x<sp/>*<sp/>difpadshape.y,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>difpadshape.x,<sp/>difpadshape.y,<sp/>difpad_batch_zsize,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>ptycho.gpus,<sp/>MemoryType::EAllocGPU);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>g<sp/>=<sp/>0;<sp/>g<sp/>&lt;<sp/>ptycho.gpus.size();<sp/>g++)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>difpadsizez<sp/>=<sp/><ref refid="ptycho_8hpp_1a1911ebcdd9be52014b087a48f65625fe" kindref="member">ptycho_cur_batch_gpu_zsize</ref>(ptycho,<sp/>d,<sp/>g);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(difpadsizez<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetDevice(ptycho.gpus,<sp/>g);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dim3<sp/>blk<sp/>=<sp/>ptycho.exitwave-&gt;ShapeBlock();</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blk.z<sp/>=<sp/>difpadsizez;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dim3<sp/>thr<sp/>=<sp/>ptycho.exitwave-&gt;ShapeThread();</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Image2D&lt;ROI&gt;&amp;<sp/>ptr_roi<sp/>=<sp/>*ptycho.rois[d]-&gt;arrays[g];</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KGLExitwave&lt;&lt;&lt;blk,<sp/>thr&gt;&gt;&gt;(*ptycho.exitwave-&gt;arrays[g],</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ptycho.probe-&gt;arrays[g],</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ptycho.object-&gt;arrays[g],<sp/>ptr_roi);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ptycho_8cu_1ad878deb8a9ac1ae105af1be65e74e3de" kindref="member">project_reciprocal_space</ref>(ptycho,<sp/>cur_difpad.arrays[g],</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g,<sp/>poscorr.<ref refid="structPosCorrection_1ad6a0258542cc0177ce8e8f082618177c" kindref="member">isGradPm</ref>);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KGLPs&lt;&lt;&lt;blk,<sp/>thr&gt;&gt;&gt;(*ptycho.probe-&gt;arrays[g],</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ptycho.object_acc-&gt;arrays[g],</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ptycho.object_div-&gt;arrays[g],</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ptycho.exitwave-&gt;arrays[g],<sp/>ptr_roi);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bIterProbe)<sp/><ref refid="poscorrection_8cu_1a02a39371a68aa76181b9f8f13af84003" kindref="member">PosCorrectionProjectProbe</ref>(poscorr,<sp/>d);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>ssc_debug(</highlight><highlight class="stringliteral">&quot;Syncing<sp/>OBJ<sp/>and<sp/>setting<sp/>RF&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptycho.objmomentum<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptycho.object-&gt;WeightedLerpSync(</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ptycho.object_acc,<sp/>*ptycho.object_div,</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptycho.objstep,<sp/>ptycho.objmomentum,</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objvelocity,<sp/>ptycho.objreg);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptycho.objectsupport<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>g<sp/>=<sp/>0;<sp/>g<sp/>&lt;<sp/>ptycho.gpus.size();<sp/>g++)<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetDevice(ptycho.gpus,<sp/>g);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="glim_8cu_1ae6665768898313d181d9c50cd38a6684" kindref="member">ApplySupport</ref>(*ptycho.object-&gt;arrays[g],</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ptycho.objectsupport-&gt;arrays[g],</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptycho.SupportSizes);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="poscorrection_8cu_1a04b0935ad377b2584ae1bea34152a11c" kindref="member">PosCorrectionApplyProbeUpdate</ref>(poscorr,<sp/>probevelocity,<sp/>ptycho.probestep,<sp/>ptycho.probemomentum,<sp/>ptycho.probereg);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>ptycho.cpurfact[iter]<sp/>=<sp/>sqrtf(ptycho.rfactors-&gt;SumCPU());</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter<sp/>%<sp/>10<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssc_info(format(</highlight><highlight class="stringliteral">&quot;iter<sp/>{}/{}<sp/>error:<sp/>{}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter,<sp/>iterations,<sp/>ptycho.cpurfact[iter]));</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>ssc_event_stop();<sp/></highlight><highlight class="comment">//<sp/>PosCorr<sp/>iter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>ssc_event_stop();<sp/></highlight><highlight class="comment">//Position<sp/>Correction<sp/>Run</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>time1<sp/>=<sp/>ssc_time();</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>ssc_info(format(</highlight><highlight class="stringliteral">&quot;End<sp/>GL:<sp/>{}<sp/>ms&quot;</highlight><highlight class="normal">,<sp/>ssc_diff_time(time0,<sp/>time1)));</highlight></codeline>
<codeline lineno="313"><highlight class="normal">}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal">{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="poscorrection_8cu_1a20eb54ed5163a7a128b57a89d757c397" kindref="member">poscorrcall</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>cpuobj,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>cpuprobe,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>cpudif,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>psizex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>osizex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>osizey,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dsizex,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>cpurois,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numrois,</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bsize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numiter,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ngpus,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>cpugpus,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>rfactors,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>objbeta,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>probebeta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>psizez,</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>objsupport,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>probesupport,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numobjsupport,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>sigmask,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>geometricsteps,</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>step_obj,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>step_probe,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>reg_obj,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>reg_probe,</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>background,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>probef1)</highlight></codeline>
<codeline lineno="324"><highlight class="normal">{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>ssc_info(format(</highlight><highlight class="stringliteral">&quot;Starting<sp/>PosCorrection<sp/>-<sp/>p:<sp/>{}<sp/>o:<sp/>{}<sp/>r:<sp/>{}<sp/>b:<sp/>{}<sp/>n:<sp/>{}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psizex,<sp/>osizex,<sp/>numrois,<sp/>bsize,<sp/>numiter));</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>gpus;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>g=0;<sp/>g&lt;ngpus;<sp/>g++)</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gpus.push_back(cpugpus[g]);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ptycho_8cu_1a5d0e3f4192830fa314a9b15975d8bb2f" kindref="member">IndexRois</ref>((<ref refid="structROI" kindref="compound">ROI</ref>*)cpurois,<sp/>numrois);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structPosCorrection" kindref="compound">PosCorrection</ref><sp/>*pk<sp/>=<sp/><ref refid="poscorrection_8cu_1a80b8c07259c49828d3ca4c6575523606" kindref="member">CreatePosCorrection</ref>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)cpudif,<sp/>dim3(dsizex,dsizex,numrois),<sp/>(complex*)cpuprobe,<sp/>dim3(psizex,psizex,psizez),<sp/>(complex*)cpuobj,<sp/>dim3(osizex,osizey),</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="structROI" kindref="compound">ROI</ref>*)cpurois,<sp/>numrois,<sp/>bsize,<sp/>rfactors,<sp/>gpus,<sp/>objsupport,<sp/>probesupport,<sp/>numobjsupport,<sp/>sigmask,<sp/>geometricsteps,<sp/>background,<sp/>probef1,<sp/>step_obj,<sp/>step_probe,<sp/>reg_obj,<sp/>reg_probe);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>pk-&gt;<ref refid="structPosCorrection_1a49df06a34af1a452b67681555b511ec2" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a8dfd13763eaa2664e0f711bdf78435c2" kindref="member">objmomentum</ref><sp/>=<sp/>objbeta;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>pk-&gt;<ref refid="structPosCorrection_1a49df06a34af1a452b67681555b511ec2" kindref="member">ptycho</ref>-&gt;<ref refid="structPOptAlgorithm_1a36890b4c11b6e9ea9d0013acfa8015de" kindref="member">probemomentum</ref><sp/>=<sp/>probebeta;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="poscorrection_8cu_1ad13bbaaabe8e6ee3c38bcd49436443f2" kindref="member">PosCorrectionRun</ref>(*pk,<sp/>numiter);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="poscorrection_8cu_1a06fd91abbe4422f224bc6d23292a0962" kindref="member">DestroyPosCorrection</ref>(pk);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>ssc_info(</highlight><highlight class="stringliteral">&quot;End<sp/>PosCorrection.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="344"><highlight class="normal">}</highlight></codeline>
<codeline lineno="345"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/ibira/lnls/labs/tepui/home/yuri.tonin/ssc-cdi/cuda/src/poscorrection.cu"/>
  </compounddef>
</doxygen>
